// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: github.com/lemmerelassal/PBFlutter/proto/pbflutter.proto

package lemmerelassal_v1_pbflutter

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EnumTextAlign int32

const (
	EnumTextAlign_TEXT_ALIGN_INVALID EnumTextAlign = 0
	EnumTextAlign_left               EnumTextAlign = 1
	/// Align the text on the right edge of the container.
	EnumTextAlign_right EnumTextAlign = 2
	/// Align the text in the center of the container.
	EnumTextAlign_center EnumTextAlign = 3
	/// Stretch lines of text that end with a soft line break to fill the width of
	/// the container.
	///
	/// Lines that end with hard line breaks are aligned towards the [start] edge.
	EnumTextAlign_justify EnumTextAlign = 4
	/// Align the text on the leading edge of the container.
	///
	/// For left-to-right text ([TextDirection.ltr]), this is the left edge.
	///
	/// For right-to-left text ([TextDirection.rtl]), this is the right edge.
	EnumTextAlign_start EnumTextAlign = 5
	/// Align the text on the trailing edge of the container.
	///
	/// For left-to-right text ([TextDirection.ltr]), this is the right edge.
	///
	/// For right-to-left text ([TextDirection.rtl]), this is the left edge.
	EnumTextAlign_end EnumTextAlign = 6
)

// Enum value maps for EnumTextAlign.
var (
	EnumTextAlign_name = map[int32]string{
		0: "TEXT_ALIGN_INVALID",
		1: "left",
		2: "right",
		3: "center",
		4: "justify",
		5: "start",
		6: "end",
	}
	EnumTextAlign_value = map[string]int32{
		"TEXT_ALIGN_INVALID": 0,
		"left":               1,
		"right":              2,
		"center":             3,
		"justify":            4,
		"start":              5,
		"end":                6,
	}
)

func (x EnumTextAlign) Enum() *EnumTextAlign {
	p := new(EnumTextAlign)
	*p = x
	return p
}

func (x EnumTextAlign) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumTextAlign) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[0].Descriptor()
}

func (EnumTextAlign) Type() protoreflect.EnumType {
	return &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[0]
}

func (x EnumTextAlign) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumTextAlign.Descriptor instead.
func (EnumTextAlign) EnumDescriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{0}
}

type PBFontStyle int32

const (
	PBFontStyle_FONT_STYLE_NORMAL PBFontStyle = 0
	PBFontStyle_FONT_STYLE_ITALIC PBFontStyle = 1
)

// Enum value maps for PBFontStyle.
var (
	PBFontStyle_name = map[int32]string{
		0: "FONT_STYLE_NORMAL",
		1: "FONT_STYLE_ITALIC",
	}
	PBFontStyle_value = map[string]int32{
		"FONT_STYLE_NORMAL": 0,
		"FONT_STYLE_ITALIC": 1,
	}
)

func (x PBFontStyle) Enum() *PBFontStyle {
	p := new(PBFontStyle)
	*p = x
	return p
}

func (x PBFontStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PBFontStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[1].Descriptor()
}

func (PBFontStyle) Type() protoreflect.EnumType {
	return &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[1]
}

func (x PBFontStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PBFontStyle.Descriptor instead.
func (PBFontStyle) EnumDescriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{1}
}

type PBCollapseMode int32

const (
	PBCollapseMode_COLLAPSE_MODE_INVALID  PBCollapseMode = 0
	PBCollapseMode_COLLAPSE_MODE_PARALLAX PBCollapseMode = 1
	PBCollapseMode_COLLAPSE_MODE_PIN      PBCollapseMode = 2
	PBCollapseMode_COLLAPSE_MODE_NONE     PBCollapseMode = 3
)

// Enum value maps for PBCollapseMode.
var (
	PBCollapseMode_name = map[int32]string{
		0: "COLLAPSE_MODE_INVALID",
		1: "COLLAPSE_MODE_PARALLAX",
		2: "COLLAPSE_MODE_PIN",
		3: "COLLAPSE_MODE_NONE",
	}
	PBCollapseMode_value = map[string]int32{
		"COLLAPSE_MODE_INVALID":  0,
		"COLLAPSE_MODE_PARALLAX": 1,
		"COLLAPSE_MODE_PIN":      2,
		"COLLAPSE_MODE_NONE":     3,
	}
)

func (x PBCollapseMode) Enum() *PBCollapseMode {
	p := new(PBCollapseMode)
	*p = x
	return p
}

func (x PBCollapseMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PBCollapseMode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[2].Descriptor()
}

func (PBCollapseMode) Type() protoreflect.EnumType {
	return &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[2]
}

func (x PBCollapseMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PBCollapseMode.Descriptor instead.
func (PBCollapseMode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{2}
}

type EnumBlendMode int32

const (
	EnumBlendMode_BLEND_MODE_INVALID EnumBlendMode = 0
	EnumBlendMode_clear              EnumBlendMode = 1
	EnumBlendMode_src                EnumBlendMode = 2
	EnumBlendMode_dst                EnumBlendMode = 3
	EnumBlendMode_srcOver            EnumBlendMode = 4
	EnumBlendMode_dstOver            EnumBlendMode = 5
	EnumBlendMode_srcIn              EnumBlendMode = 6
	EnumBlendMode_dstIn              EnumBlendMode = 7
	EnumBlendMode_srcOut             EnumBlendMode = 8
	EnumBlendMode_dstOut             EnumBlendMode = 9
	EnumBlendMode_srcATop            EnumBlendMode = 10
	EnumBlendMode_dstATop            EnumBlendMode = 11
	EnumBlendMode_xor                EnumBlendMode = 12
	EnumBlendMode_plus               EnumBlendMode = 13
	EnumBlendMode_modulate           EnumBlendMode = 14
	EnumBlendMode_screen             EnumBlendMode = 15
	EnumBlendMode_overlay            EnumBlendMode = 16
	EnumBlendMode_darken             EnumBlendMode = 17
	EnumBlendMode_lighten            EnumBlendMode = 18
	EnumBlendMode_colorDodge         EnumBlendMode = 19
	EnumBlendMode_colorBurn          EnumBlendMode = 20
	EnumBlendMode_hardLight          EnumBlendMode = 21
	EnumBlendMode_softLight          EnumBlendMode = 22
	EnumBlendMode_difference         EnumBlendMode = 23
	EnumBlendMode_exclusion          EnumBlendMode = 24
	EnumBlendMode_multiply           EnumBlendMode = 25
	EnumBlendMode_hue                EnumBlendMode = 26
	EnumBlendMode_saturation         EnumBlendMode = 27
	EnumBlendMode_color              EnumBlendMode = 28
	EnumBlendMode_luminosity         EnumBlendMode = 29
)

// Enum value maps for EnumBlendMode.
var (
	EnumBlendMode_name = map[int32]string{
		0:  "BLEND_MODE_INVALID",
		1:  "clear",
		2:  "src",
		3:  "dst",
		4:  "srcOver",
		5:  "dstOver",
		6:  "srcIn",
		7:  "dstIn",
		8:  "srcOut",
		9:  "dstOut",
		10: "srcATop",
		11: "dstATop",
		12: "xor",
		13: "plus",
		14: "modulate",
		15: "screen",
		16: "overlay",
		17: "darken",
		18: "lighten",
		19: "colorDodge",
		20: "colorBurn",
		21: "hardLight",
		22: "softLight",
		23: "difference",
		24: "exclusion",
		25: "multiply",
		26: "hue",
		27: "saturation",
		28: "color",
		29: "luminosity",
	}
	EnumBlendMode_value = map[string]int32{
		"BLEND_MODE_INVALID": 0,
		"clear":              1,
		"src":                2,
		"dst":                3,
		"srcOver":            4,
		"dstOver":            5,
		"srcIn":              6,
		"dstIn":              7,
		"srcOut":             8,
		"dstOut":             9,
		"srcATop":            10,
		"dstATop":            11,
		"xor":                12,
		"plus":               13,
		"modulate":           14,
		"screen":             15,
		"overlay":            16,
		"darken":             17,
		"lighten":            18,
		"colorDodge":         19,
		"colorBurn":          20,
		"hardLight":          21,
		"softLight":          22,
		"difference":         23,
		"exclusion":          24,
		"multiply":           25,
		"hue":                26,
		"saturation":         27,
		"color":              28,
		"luminosity":         29,
	}
)

func (x EnumBlendMode) Enum() *EnumBlendMode {
	p := new(EnumBlendMode)
	*p = x
	return p
}

func (x EnumBlendMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumBlendMode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[3].Descriptor()
}

func (EnumBlendMode) Type() protoreflect.EnumType {
	return &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[3]
}

func (x EnumBlendMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumBlendMode.Descriptor instead.
func (EnumBlendMode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{3}
}

type EnumBoxFit int32

const (
	EnumBoxFit_BOX_FIT_INVALID EnumBoxFit = 0
	EnumBoxFit_fill            EnumBoxFit = 1
	EnumBoxFit_contain         EnumBoxFit = 2
	EnumBoxFit_cover           EnumBoxFit = 3
	EnumBoxFit_fit_width       EnumBoxFit = 4
	EnumBoxFit_fit_height      EnumBoxFit = 5
	EnumBoxFit_none            EnumBoxFit = 6
	EnumBoxFit_scale_down      EnumBoxFit = 7
)

// Enum value maps for EnumBoxFit.
var (
	EnumBoxFit_name = map[int32]string{
		0: "BOX_FIT_INVALID",
		1: "fill",
		2: "contain",
		3: "cover",
		4: "fit_width",
		5: "fit_height",
		6: "none",
		7: "scale_down",
	}
	EnumBoxFit_value = map[string]int32{
		"BOX_FIT_INVALID": 0,
		"fill":            1,
		"contain":         2,
		"cover":           3,
		"fit_width":       4,
		"fit_height":      5,
		"none":            6,
		"scale_down":      7,
	}
)

func (x EnumBoxFit) Enum() *EnumBoxFit {
	p := new(EnumBoxFit)
	*p = x
	return p
}

func (x EnumBoxFit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumBoxFit) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[4].Descriptor()
}

func (EnumBoxFit) Type() protoreflect.EnumType {
	return &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[4]
}

func (x EnumBoxFit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumBoxFit.Descriptor instead.
func (EnumBoxFit) EnumDescriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{4}
}

type EnumImageRepeat int32

const (
	EnumImageRepeat_IMAGE_REPEAT_INVALID EnumImageRepeat = 0
	EnumImageRepeat_repeat               EnumImageRepeat = 1
	EnumImageRepeat_repeatX              EnumImageRepeat = 2
	EnumImageRepeat_repeatY              EnumImageRepeat = 3
	EnumImageRepeat_noRepeat             EnumImageRepeat = 4
)

// Enum value maps for EnumImageRepeat.
var (
	EnumImageRepeat_name = map[int32]string{
		0: "IMAGE_REPEAT_INVALID",
		1: "repeat",
		2: "repeatX",
		3: "repeatY",
		4: "noRepeat",
	}
	EnumImageRepeat_value = map[string]int32{
		"IMAGE_REPEAT_INVALID": 0,
		"repeat":               1,
		"repeatX":              2,
		"repeatY":              3,
		"noRepeat":             4,
	}
)

func (x EnumImageRepeat) Enum() *EnumImageRepeat {
	p := new(EnumImageRepeat)
	*p = x
	return p
}

func (x EnumImageRepeat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumImageRepeat) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[5].Descriptor()
}

func (EnumImageRepeat) Type() protoreflect.EnumType {
	return &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[5]
}

func (x EnumImageRepeat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumImageRepeat.Descriptor instead.
func (EnumImageRepeat) EnumDescriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{5}
}

type EnumBoxShape int32

const (
	EnumBoxShape_BOX_SHAPE_INVALID EnumBoxShape = 0
	EnumBoxShape_rectangle         EnumBoxShape = 1
	EnumBoxShape_circle            EnumBoxShape = 2
)

// Enum value maps for EnumBoxShape.
var (
	EnumBoxShape_name = map[int32]string{
		0: "BOX_SHAPE_INVALID",
		1: "rectangle",
		2: "circle",
	}
	EnumBoxShape_value = map[string]int32{
		"BOX_SHAPE_INVALID": 0,
		"rectangle":         1,
		"circle":            2,
	}
)

func (x EnumBoxShape) Enum() *EnumBoxShape {
	p := new(EnumBoxShape)
	*p = x
	return p
}

func (x EnumBoxShape) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumBoxShape) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[6].Descriptor()
}

func (EnumBoxShape) Type() protoreflect.EnumType {
	return &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[6]
}

func (x EnumBoxShape) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumBoxShape.Descriptor instead.
func (EnumBoxShape) EnumDescriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{6}
}

type EnumTileMode int32

const (
	EnumTileMode_TILE_MODE_INVALID EnumTileMode = 0
	EnumTileMode_clamp             EnumTileMode = 1
	EnumTileMode_repeated          EnumTileMode = 2
	EnumTileMode_mirror            EnumTileMode = 3
)

// Enum value maps for EnumTileMode.
var (
	EnumTileMode_name = map[int32]string{
		0: "TILE_MODE_INVALID",
		1: "clamp",
		2: "repeated",
		3: "mirror",
	}
	EnumTileMode_value = map[string]int32{
		"TILE_MODE_INVALID": 0,
		"clamp":             1,
		"repeated":          2,
		"mirror":            3,
	}
)

func (x EnumTileMode) Enum() *EnumTileMode {
	p := new(EnumTileMode)
	*p = x
	return p
}

func (x EnumTileMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumTileMode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[7].Descriptor()
}

func (EnumTileMode) Type() protoreflect.EnumType {
	return &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[7]
}

func (x EnumTileMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumTileMode.Descriptor instead.
func (EnumTileMode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{7}
}

type EnumBorderStyle int32

const (
	EnumBorderStyle_BORDER_STYLE_INVALID EnumBorderStyle = 0
	EnumBorderStyle_BORDER_STYLE_NONE    EnumBorderStyle = 1
	EnumBorderStyle_BORDER_STYLE_SOLID   EnumBorderStyle = 2
)

// Enum value maps for EnumBorderStyle.
var (
	EnumBorderStyle_name = map[int32]string{
		0: "BORDER_STYLE_INVALID",
		1: "BORDER_STYLE_NONE",
		2: "BORDER_STYLE_SOLID",
	}
	EnumBorderStyle_value = map[string]int32{
		"BORDER_STYLE_INVALID": 0,
		"BORDER_STYLE_NONE":    1,
		"BORDER_STYLE_SOLID":   2,
	}
)

func (x EnumBorderStyle) Enum() *EnumBorderStyle {
	p := new(EnumBorderStyle)
	*p = x
	return p
}

func (x EnumBorderStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumBorderStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[8].Descriptor()
}

func (EnumBorderStyle) Type() protoreflect.EnumType {
	return &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[8]
}

func (x EnumBorderStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumBorderStyle.Descriptor instead.
func (EnumBorderStyle) EnumDescriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{8}
}

type PBColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Red     int32   `protobuf:"varint,1,opt,name=red,proto3" json:"red,omitempty"`
	Green   int32   `protobuf:"varint,2,opt,name=green,proto3" json:"green,omitempty"`
	Blue    int32   `protobuf:"varint,3,opt,name=blue,proto3" json:"blue,omitempty"`
	Opacity float32 `protobuf:"fixed32,4,opt,name=opacity,proto3" json:"opacity,omitempty"`
}

func (x *PBColor) Reset() {
	*x = PBColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBColor) ProtoMessage() {}

func (x *PBColor) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBColor.ProtoReflect.Descriptor instead.
func (*PBColor) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{0}
}

func (x *PBColor) GetRed() int32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *PBColor) GetGreen() int32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *PBColor) GetBlue() int32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *PBColor) GetOpacity() float32 {
	if x != nil {
		return x.Opacity
	}
	return 0
}

type PBSVG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Picture []byte  `protobuf:"bytes,1,opt,name=picture,proto3" json:"picture,omitempty"`
	Height  float32 `protobuf:"fixed32,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *PBSVG) Reset() {
	*x = PBSVG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBSVG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBSVG) ProtoMessage() {}

func (x *PBSVG) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBSVG.ProtoReflect.Descriptor instead.
func (*PBSVG) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{1}
}

func (x *PBSVG) GetPicture() []byte {
	if x != nil {
		return x.Picture
	}
	return nil
}

func (x *PBSVG) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type PBColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*any.Any `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *PBColumn) Reset() {
	*x = PBColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBColumn) ProtoMessage() {}

func (x *PBColumn) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBColumn.ProtoReflect.Descriptor instead.
func (*PBColumn) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{2}
}

func (x *PBColumn) GetChildren() []*any.Any {
	if x != nil {
		return x.Children
	}
	return nil
}

type PBAlign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Child  *any.Any `protobuf:"bytes,1,opt,name=child,proto3" json:"child,omitempty"`
	AlignX float32  `protobuf:"fixed32,2,opt,name=align_x,json=alignX,proto3" json:"align_x,omitempty"` // -1.0 to +1.0
	AlignY float32  `protobuf:"fixed32,3,opt,name=align_y,json=alignY,proto3" json:"align_y,omitempty"` // -1.0 to +1.0
}

func (x *PBAlign) Reset() {
	*x = PBAlign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBAlign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBAlign) ProtoMessage() {}

func (x *PBAlign) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBAlign.ProtoReflect.Descriptor instead.
func (*PBAlign) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{3}
}

func (x *PBAlign) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *PBAlign) GetAlignX() float32 {
	if x != nil {
		return x.AlignX
	}
	return 0
}

func (x *PBAlign) GetAlignY() float32 {
	if x != nil {
		return x.AlignY
	}
	return 0
}

type PBTextAlign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextAlign EnumTextAlign `protobuf:"varint,1,opt,name=text_align,json=textAlign,proto3,enum=lemmerelassal.v1.pbflutter.EnumTextAlign" json:"text_align,omitempty"`
}

func (x *PBTextAlign) Reset() {
	*x = PBTextAlign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTextAlign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTextAlign) ProtoMessage() {}

func (x *PBTextAlign) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTextAlign.ProtoReflect.Descriptor instead.
func (*PBTextAlign) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{4}
}

func (x *PBTextAlign) GetTextAlign() EnumTextAlign {
	if x != nil {
		return x.TextAlign
	}
	return EnumTextAlign_TEXT_ALIGN_INVALID
}

type PBText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text      string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	TextStyle *any.Any `protobuf:"bytes,2,opt,name=text_style,json=textStyle,proto3" json:"text_style,omitempty"`
	TextAlign *any.Any `protobuf:"bytes,3,opt,name=text_align,json=textAlign,proto3" json:"text_align,omitempty"`
}

func (x *PBText) Reset() {
	*x = PBText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBText) ProtoMessage() {}

func (x *PBText) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBText.ProtoReflect.Descriptor instead.
func (*PBText) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{5}
}

func (x *PBText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PBText) GetTextStyle() *any.Any {
	if x != nil {
		return x.TextStyle
	}
	return nil
}

func (x *PBText) GetTextAlign() *any.Any {
	if x != nil {
		return x.TextAlign
	}
	return nil
}

type PBAcidText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text      string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	TextStyle *any.Any `protobuf:"bytes,2,opt,name=text_style,json=textStyle,proto3" json:"text_style,omitempty"`
}

func (x *PBAcidText) Reset() {
	*x = PBAcidText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBAcidText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBAcidText) ProtoMessage() {}

func (x *PBAcidText) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBAcidText.ProtoReflect.Descriptor instead.
func (*PBAcidText) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{6}
}

func (x *PBAcidText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PBAcidText) GetTextStyle() *any.Any {
	if x != nil {
		return x.TextStyle
	}
	return nil
}

type PBShadow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset     *any.Any `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Color      *any.Any `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	BlurRadius float32  `protobuf:"fixed32,3,opt,name=blur_radius,json=blurRadius,proto3" json:"blur_radius,omitempty"`
}

func (x *PBShadow) Reset() {
	*x = PBShadow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBShadow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBShadow) ProtoMessage() {}

func (x *PBShadow) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBShadow.ProtoReflect.Descriptor instead.
func (*PBShadow) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{7}
}

func (x *PBShadow) GetOffset() *any.Any {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *PBShadow) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *PBShadow) GetBlurRadius() float32 {
	if x != nil {
		return x.BlurRadius
	}
	return 0
}

type PBOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *PBOffset) Reset() {
	*x = PBOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBOffset) ProtoMessage() {}

func (x *PBOffset) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBOffset.ProtoReflect.Descriptor instead.
func (*PBOffset) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{8}
}

func (x *PBOffset) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PBOffset) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type PBTextStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FontFamily         string      `protobuf:"bytes,1,opt,name=font_family,json=fontFamily,proto3" json:"font_family,omitempty"`
	Color              *any.Any    `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	FontSize           float32     `protobuf:"fixed32,3,opt,name=font_size,json=fontSize,proto3" json:"font_size,omitempty"`
	Shadows            []*any.Any  `protobuf:"bytes,4,rep,name=shadows,proto3" json:"shadows,omitempty"`
	FontWeight         uint32      `protobuf:"varint,5,opt,name=font_weight,json=fontWeight,proto3" json:"font_weight,omitempty"`
	FontStyle          PBFontStyle `protobuf:"varint,6,opt,name=font_style,json=fontStyle,proto3,enum=lemmerelassal.v1.pbflutter.PBFontStyle" json:"font_style,omitempty"`
	Height             uint32      `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	Decoration         *any.Any    `protobuf:"bytes,8,opt,name=decoration,proto3" json:"decoration,omitempty"`
	DecorationColor    *any.Any    `protobuf:"bytes,9,opt,name=decoration_color,json=decorationColor,proto3" json:"decoration_color,omitempty"`
	DecorationTyle     *any.Any    `protobuf:"bytes,10,opt,name=decoration_tyle,json=decorationTyle,proto3" json:"decoration_tyle,omitempty"`
	Foreground         *any.Any    `protobuf:"bytes,11,opt,name=foreground,proto3" json:"foreground,omitempty"`
	FontFamilyFallback []string    `protobuf:"bytes,12,rep,name=font_family_fallback,json=fontFamilyFallback,proto3" json:"font_family_fallback,omitempty"`
}

func (x *PBTextStyle) Reset() {
	*x = PBTextStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTextStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTextStyle) ProtoMessage() {}

func (x *PBTextStyle) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTextStyle.ProtoReflect.Descriptor instead.
func (*PBTextStyle) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{9}
}

func (x *PBTextStyle) GetFontFamily() string {
	if x != nil {
		return x.FontFamily
	}
	return ""
}

func (x *PBTextStyle) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *PBTextStyle) GetFontSize() float32 {
	if x != nil {
		return x.FontSize
	}
	return 0
}

func (x *PBTextStyle) GetShadows() []*any.Any {
	if x != nil {
		return x.Shadows
	}
	return nil
}

func (x *PBTextStyle) GetFontWeight() uint32 {
	if x != nil {
		return x.FontWeight
	}
	return 0
}

func (x *PBTextStyle) GetFontStyle() PBFontStyle {
	if x != nil {
		return x.FontStyle
	}
	return PBFontStyle_FONT_STYLE_NORMAL
}

func (x *PBTextStyle) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PBTextStyle) GetDecoration() *any.Any {
	if x != nil {
		return x.Decoration
	}
	return nil
}

func (x *PBTextStyle) GetDecorationColor() *any.Any {
	if x != nil {
		return x.DecorationColor
	}
	return nil
}

func (x *PBTextStyle) GetDecorationTyle() *any.Any {
	if x != nil {
		return x.DecorationTyle
	}
	return nil
}

func (x *PBTextStyle) GetForeground() *any.Any {
	if x != nil {
		return x.Foreground
	}
	return nil
}

func (x *PBTextStyle) GetFontFamilyFallback() []string {
	if x != nil {
		return x.FontFamilyFallback
	}
	return nil
}

type PBSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  float32 `protobuf:"fixed32,1,opt,name=width,proto3" json:"width,omitempty"`
	Height float32 `protobuf:"fixed32,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *PBSize) Reset() {
	*x = PBSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBSize) ProtoMessage() {}

func (x *PBSize) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBSize.ProtoReflect.Descriptor instead.
func (*PBSize) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{10}
}

func (x *PBSize) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PBSize) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type PBPreferredSizeWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Child         *any.Any `protobuf:"bytes,1,opt,name=child,proto3" json:"child,omitempty"`
	PreferredSize *any.Any `protobuf:"bytes,2,opt,name=preferred_size,json=preferredSize,proto3" json:"preferred_size,omitempty"`
}

func (x *PBPreferredSizeWidget) Reset() {
	*x = PBPreferredSizeWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBPreferredSizeWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBPreferredSizeWidget) ProtoMessage() {}

func (x *PBPreferredSizeWidget) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBPreferredSizeWidget.ProtoReflect.Descriptor instead.
func (*PBPreferredSizeWidget) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{11}
}

func (x *PBPreferredSizeWidget) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *PBPreferredSizeWidget) GetPreferredSize() *any.Any {
	if x != nil {
		return x.PreferredSize
	}
	return nil
}

type PBSliverAppBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leading         *any.Any `protobuf:"bytes,1,opt,name=leading,proto3" json:"leading,omitempty"`
	BackgroundColor *any.Any `protobuf:"bytes,2,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
	FlexibleSpace   *any.Any `protobuf:"bytes,3,opt,name=flexible_space,json=flexibleSpace,proto3" json:"flexible_space,omitempty"`
	ExpandedHeight  float32  `protobuf:"fixed32,4,opt,name=expanded_height,json=expandedHeight,proto3" json:"expanded_height,omitempty"`
	Pinned          bool     `protobuf:"varint,5,opt,name=pinned,proto3" json:"pinned,omitempty"`
	Floating        bool     `protobuf:"varint,6,opt,name=floating,proto3" json:"floating,omitempty"`
	Elevation       float32  `protobuf:"fixed32,7,opt,name=elevation,proto3" json:"elevation,omitempty"`
	ForceElevated   bool     `protobuf:"varint,8,opt,name=force_elevated,json=forceElevated,proto3" json:"force_elevated,omitempty"`
	Bottom          *any.Any `protobuf:"bytes,9,opt,name=bottom,proto3" json:"bottom,omitempty"`
}

func (x *PBSliverAppBar) Reset() {
	*x = PBSliverAppBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBSliverAppBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBSliverAppBar) ProtoMessage() {}

func (x *PBSliverAppBar) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBSliverAppBar.ProtoReflect.Descriptor instead.
func (*PBSliverAppBar) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{12}
}

func (x *PBSliverAppBar) GetLeading() *any.Any {
	if x != nil {
		return x.Leading
	}
	return nil
}

func (x *PBSliverAppBar) GetBackgroundColor() *any.Any {
	if x != nil {
		return x.BackgroundColor
	}
	return nil
}

func (x *PBSliverAppBar) GetFlexibleSpace() *any.Any {
	if x != nil {
		return x.FlexibleSpace
	}
	return nil
}

func (x *PBSliverAppBar) GetExpandedHeight() float32 {
	if x != nil {
		return x.ExpandedHeight
	}
	return 0
}

func (x *PBSliverAppBar) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

func (x *PBSliverAppBar) GetFloating() bool {
	if x != nil {
		return x.Floating
	}
	return false
}

func (x *PBSliverAppBar) GetElevation() float32 {
	if x != nil {
		return x.Elevation
	}
	return 0
}

func (x *PBSliverAppBar) GetForceElevated() bool {
	if x != nil {
		return x.ForceElevated
	}
	return false
}

func (x *PBSliverAppBar) GetBottom() *any.Any {
	if x != nil {
		return x.Bottom
	}
	return nil
}

type PBIconButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon      *any.Any `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	OnPressed string   `protobuf:"bytes,2,opt,name=on_pressed,json=onPressed,proto3" json:"on_pressed,omitempty"`
}

func (x *PBIconButton) Reset() {
	*x = PBIconButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBIconButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBIconButton) ProtoMessage() {}

func (x *PBIconButton) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBIconButton.ProtoReflect.Descriptor instead.
func (*PBIconButton) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{13}
}

func (x *PBIconButton) GetIcon() *any.Any {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *PBIconButton) GetOnPressed() string {
	if x != nil {
		return x.OnPressed
	}
	return ""
}

type PBFlexibleSpaceBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollapseMode PBCollapseMode `protobuf:"varint,1,opt,name=collapse_mode,json=collapseMode,proto3,enum=lemmerelassal.v1.pbflutter.PBCollapseMode" json:"collapse_mode,omitempty"`
	Background   *any.Any       `protobuf:"bytes,2,opt,name=background,proto3" json:"background,omitempty"`
}

func (x *PBFlexibleSpaceBar) Reset() {
	*x = PBFlexibleSpaceBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBFlexibleSpaceBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBFlexibleSpaceBar) ProtoMessage() {}

func (x *PBFlexibleSpaceBar) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBFlexibleSpaceBar.ProtoReflect.Descriptor instead.
func (*PBFlexibleSpaceBar) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{14}
}

func (x *PBFlexibleSpaceBar) GetCollapseMode() PBCollapseMode {
	if x != nil {
		return x.CollapseMode
	}
	return PBCollapseMode_COLLAPSE_MODE_INVALID
}

func (x *PBFlexibleSpaceBar) GetBackground() *any.Any {
	if x != nil {
		return x.Background
	}
	return nil
}

type PBIconData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodePoint          int32  `protobuf:"varint,1,opt,name=code_point,json=codePoint,proto3" json:"code_point,omitempty"`
	FontFamily         string `protobuf:"bytes,2,opt,name=font_family,json=fontFamily,proto3" json:"font_family,omitempty"`
	MatchTextDirection bool   `protobuf:"varint,3,opt,name=match_text_direction,json=matchTextDirection,proto3" json:"match_text_direction,omitempty"`
}

func (x *PBIconData) Reset() {
	*x = PBIconData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBIconData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBIconData) ProtoMessage() {}

func (x *PBIconData) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBIconData.ProtoReflect.Descriptor instead.
func (*PBIconData) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{15}
}

func (x *PBIconData) GetCodePoint() int32 {
	if x != nil {
		return x.CodePoint
	}
	return 0
}

func (x *PBIconData) GetFontFamily() string {
	if x != nil {
		return x.FontFamily
	}
	return ""
}

func (x *PBIconData) GetMatchTextDirection() bool {
	if x != nil {
		return x.MatchTextDirection
	}
	return false
}

type PBIcon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon  *any.Any `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Color *any.Any `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *PBIcon) Reset() {
	*x = PBIcon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBIcon) ProtoMessage() {}

func (x *PBIcon) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBIcon.ProtoReflect.Descriptor instead.
func (*PBIcon) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{16}
}

func (x *PBIcon) GetIcon() *any.Any {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *PBIcon) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

type PBTabBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tabs []*any.Any `protobuf:"bytes,1,rep,name=tabs,proto3" json:"tabs,omitempty"` // controller also necessary but how?
}

func (x *PBTabBar) Reset() {
	*x = PBTabBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTabBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTabBar) ProtoMessage() {}

func (x *PBTabBar) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTabBar.ProtoReflect.Descriptor instead.
func (*PBTabBar) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{17}
}

func (x *PBTabBar) GetTabs() []*any.Any {
	if x != nil {
		return x.Tabs
	}
	return nil
}

type PBTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Icon *any.Any `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *PBTab) Reset() {
	*x = PBTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTab) ProtoMessage() {}

func (x *PBTab) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTab.ProtoReflect.Descriptor instead.
func (*PBTab) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{18}
}

func (x *PBTab) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PBTab) GetIcon() *any.Any {
	if x != nil {
		return x.Icon
	}
	return nil
}

type PBTabBarView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*any.Any `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"` // controller also necessary but how?
}

func (x *PBTabBarView) Reset() {
	*x = PBTabBarView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTabBarView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTabBarView) ProtoMessage() {}

func (x *PBTabBarView) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTabBarView.ProtoReflect.Descriptor instead.
func (*PBTabBarView) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{19}
}

func (x *PBTabBarView) GetChildren() []*any.Any {
	if x != nil {
		return x.Children
	}
	return nil
}

type PBWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*any.Any `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *PBWrap) Reset() {
	*x = PBWrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBWrap) ProtoMessage() {}

func (x *PBWrap) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBWrap.ProtoReflect.Descriptor instead.
func (*PBWrap) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{20}
}

func (x *PBWrap) GetChildren() []*any.Any {
	if x != nil {
		return x.Children
	}
	return nil
}

type PBScaffold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *any.Any `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *PBScaffold) Reset() {
	*x = PBScaffold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBScaffold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBScaffold) ProtoMessage() {}

func (x *PBScaffold) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBScaffold.ProtoReflect.Descriptor instead.
func (*PBScaffold) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{21}
}

func (x *PBScaffold) GetBody() *any.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type PBPositioned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left   float32  `protobuf:"fixed32,1,opt,name=left,proto3" json:"left,omitempty"`
	Top    float32  `protobuf:"fixed32,2,opt,name=top,proto3" json:"top,omitempty"`
	Right  float32  `protobuf:"fixed32,3,opt,name=right,proto3" json:"right,omitempty"`
	Bottom float32  `protobuf:"fixed32,4,opt,name=bottom,proto3" json:"bottom,omitempty"`
	Width  float32  `protobuf:"fixed32,5,opt,name=width,proto3" json:"width,omitempty"`
	Height float32  `protobuf:"fixed32,6,opt,name=height,proto3" json:"height,omitempty"`
	Child  *any.Any `protobuf:"bytes,7,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *PBPositioned) Reset() {
	*x = PBPositioned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBPositioned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBPositioned) ProtoMessage() {}

func (x *PBPositioned) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBPositioned.ProtoReflect.Descriptor instead.
func (*PBPositioned) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{22}
}

func (x *PBPositioned) GetLeft() float32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *PBPositioned) GetTop() float32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *PBPositioned) GetRight() float32 {
	if x != nil {
		return x.Right
	}
	return 0
}

func (x *PBPositioned) GetBottom() float32 {
	if x != nil {
		return x.Bottom
	}
	return 0
}

func (x *PBPositioned) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PBPositioned) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PBPositioned) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

type PBEdgeInsetsGeometry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bottom float32 `protobuf:"fixed32,1,opt,name=bottom,proto3" json:"bottom,omitempty"`
	End    float32 `protobuf:"fixed32,2,opt,name=end,proto3" json:"end,omitempty"`
	Left   float32 `protobuf:"fixed32,3,opt,name=left,proto3" json:"left,omitempty"`
	Right  float32 `protobuf:"fixed32,4,opt,name=right,proto3" json:"right,omitempty"`
	Start  float32 `protobuf:"fixed32,5,opt,name=start,proto3" json:"start,omitempty"`
	Top    float32 `protobuf:"fixed32,6,opt,name=top,proto3" json:"top,omitempty"`
}

func (x *PBEdgeInsetsGeometry) Reset() {
	*x = PBEdgeInsetsGeometry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBEdgeInsetsGeometry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBEdgeInsetsGeometry) ProtoMessage() {}

func (x *PBEdgeInsetsGeometry) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBEdgeInsetsGeometry.ProtoReflect.Descriptor instead.
func (*PBEdgeInsetsGeometry) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{23}
}

func (x *PBEdgeInsetsGeometry) GetBottom() float32 {
	if x != nil {
		return x.Bottom
	}
	return 0
}

func (x *PBEdgeInsetsGeometry) GetEnd() float32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *PBEdgeInsetsGeometry) GetLeft() float32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *PBEdgeInsetsGeometry) GetRight() float32 {
	if x != nil {
		return x.Right
	}
	return 0
}

func (x *PBEdgeInsetsGeometry) GetStart() float32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *PBEdgeInsetsGeometry) GetTop() float32 {
	if x != nil {
		return x.Top
	}
	return 0
}

type PBPadding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Padding *any.Any `protobuf:"bytes,1,opt,name=padding,proto3" json:"padding,omitempty"`
	Child   *any.Any `protobuf:"bytes,2,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *PBPadding) Reset() {
	*x = PBPadding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBPadding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBPadding) ProtoMessage() {}

func (x *PBPadding) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBPadding.ProtoReflect.Descriptor instead.
func (*PBPadding) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{24}
}

func (x *PBPadding) GetPadding() *any.Any {
	if x != nil {
		return x.Padding
	}
	return nil
}

func (x *PBPadding) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

type PBStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*any.Any `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *PBStack) Reset() {
	*x = PBStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBStack) ProtoMessage() {}

func (x *PBStack) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBStack.ProtoReflect.Descriptor instead.
func (*PBStack) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{25}
}

func (x *PBStack) GetChildren() []*any.Any {
	if x != nil {
		return x.Children
	}
	return nil
}

type PBRawMaterialButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constraints *any.Any `protobuf:"bytes,1,opt,name=constraints,proto3" json:"constraints,omitempty"`
	Child       *any.Any `protobuf:"bytes,2,opt,name=child,proto3" json:"child,omitempty"`
	Elevation   float32  `protobuf:"fixed32,3,opt,name=elevation,proto3" json:"elevation,omitempty"`
	FillColor   *any.Any `protobuf:"bytes,4,opt,name=fillColor,proto3" json:"fillColor,omitempty"`
	Shape       *any.Any `protobuf:"bytes,5,opt,name=shape,proto3" json:"shape,omitempty"`
}

func (x *PBRawMaterialButton) Reset() {
	*x = PBRawMaterialButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBRawMaterialButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBRawMaterialButton) ProtoMessage() {}

func (x *PBRawMaterialButton) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBRawMaterialButton.ProtoReflect.Descriptor instead.
func (*PBRawMaterialButton) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{26}
}

func (x *PBRawMaterialButton) GetConstraints() *any.Any {
	if x != nil {
		return x.Constraints
	}
	return nil
}

func (x *PBRawMaterialButton) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *PBRawMaterialButton) GetElevation() float32 {
	if x != nil {
		return x.Elevation
	}
	return 0
}

func (x *PBRawMaterialButton) GetFillColor() *any.Any {
	if x != nil {
		return x.FillColor
	}
	return nil
}

func (x *PBRawMaterialButton) GetShape() *any.Any {
	if x != nil {
		return x.Shape
	}
	return nil
}

type PBCircleBorder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PBCircleBorder) Reset() {
	*x = PBCircleBorder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBCircleBorder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBCircleBorder) ProtoMessage() {}

func (x *PBCircleBorder) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBCircleBorder.ProtoReflect.Descriptor instead.
func (*PBCircleBorder) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{27}
}

type PBShimmer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseColor      *any.Any `protobuf:"bytes,1,opt,name=base_color,json=baseColor,proto3" json:"base_color,omitempty"`
	HighlightColor *any.Any `protobuf:"bytes,2,opt,name=highlight_color,json=highlightColor,proto3" json:"highlight_color,omitempty"`
	Child          *any.Any `protobuf:"bytes,3,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *PBShimmer) Reset() {
	*x = PBShimmer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBShimmer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBShimmer) ProtoMessage() {}

func (x *PBShimmer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBShimmer.ProtoReflect.Descriptor instead.
func (*PBShimmer) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{28}
}

func (x *PBShimmer) GetBaseColor() *any.Any {
	if x != nil {
		return x.BaseColor
	}
	return nil
}

func (x *PBShimmer) GetHighlightColor() *any.Any {
	if x != nil {
		return x.HighlightColor
	}
	return nil
}

func (x *PBShimmer) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

type PBBoxConstraints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinWidth  float32 `protobuf:"fixed32,1,opt,name=min_width,json=minWidth,proto3" json:"min_width,omitempty"`
	MaxWidth  float32 `protobuf:"fixed32,2,opt,name=max_width,json=maxWidth,proto3" json:"max_width,omitempty"`
	MinHeight float32 `protobuf:"fixed32,3,opt,name=min_height,json=minHeight,proto3" json:"min_height,omitempty"`
	MaxHeight float32 `protobuf:"fixed32,4,opt,name=max_height,json=maxHeight,proto3" json:"max_height,omitempty"`
}

func (x *PBBoxConstraints) Reset() {
	*x = PBBoxConstraints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBoxConstraints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBoxConstraints) ProtoMessage() {}

func (x *PBBoxConstraints) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBoxConstraints.ProtoReflect.Descriptor instead.
func (*PBBoxConstraints) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{29}
}

func (x *PBBoxConstraints) GetMinWidth() float32 {
	if x != nil {
		return x.MinWidth
	}
	return 0
}

func (x *PBBoxConstraints) GetMaxWidth() float32 {
	if x != nil {
		return x.MaxWidth
	}
	return 0
}

func (x *PBBoxConstraints) GetMinHeight() float32 {
	if x != nil {
		return x.MinHeight
	}
	return 0
}

func (x *PBBoxConstraints) GetMaxHeight() float32 {
	if x != nil {
		return x.MaxHeight
	}
	return 0
}

type PBContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color      *any.Any `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Width      *any.Any `protobuf:"bytes,2,opt,name=width,proto3" json:"width,omitempty"`
	Height     *any.Any `protobuf:"bytes,3,opt,name=height,proto3" json:"height,omitempty"`
	Child      *any.Any `protobuf:"bytes,4,opt,name=child,proto3" json:"child,omitempty"`
	Decoration *any.Any `protobuf:"bytes,5,opt,name=decoration,proto3" json:"decoration,omitempty"`
}

func (x *PBContainer) Reset() {
	*x = PBContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBContainer) ProtoMessage() {}

func (x *PBContainer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBContainer.ProtoReflect.Descriptor instead.
func (*PBContainer) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{30}
}

func (x *PBContainer) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *PBContainer) GetWidth() *any.Any {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *PBContainer) GetHeight() *any.Any {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *PBContainer) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *PBContainer) GetDecoration() *any.Any {
	if x != nil {
		return x.Decoration
	}
	return nil
}

type PBColorTween struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Begin *any.Any `protobuf:"bytes,1,opt,name=begin,proto3" json:"begin,omitempty"`
	End   *any.Any `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *PBColorTween) Reset() {
	*x = PBColorTween{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBColorTween) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBColorTween) ProtoMessage() {}

func (x *PBColorTween) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBColorTween.ProtoReflect.Descriptor instead.
func (*PBColorTween) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{31}
}

func (x *PBColorTween) GetBegin() *any.Any {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *PBColorTween) GetEnd() *any.Any {
	if x != nil {
		return x.End
	}
	return nil
}

type PBAnimatedBackground struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColorTweens []*any.Any `protobuf:"bytes,1,rep,name=color_tweens,json=colorTweens,proto3" json:"color_tweens,omitempty"`
}

func (x *PBAnimatedBackground) Reset() {
	*x = PBAnimatedBackground{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBAnimatedBackground) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBAnimatedBackground) ProtoMessage() {}

func (x *PBAnimatedBackground) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBAnimatedBackground.ProtoReflect.Descriptor instead.
func (*PBAnimatedBackground) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{32}
}

func (x *PBAnimatedBackground) GetColorTweens() []*any.Any {
	if x != nil {
		return x.ColorTweens
	}
	return nil
}

type PBDetailView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PBDetailView) Reset() {
	*x = PBDetailView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBDetailView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBDetailView) ProtoMessage() {}

func (x *PBDetailView) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBDetailView.ProtoReflect.Descriptor instead.
func (*PBDetailView) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{33}
}

type PBTabEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title *any.Any `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *PBTabEntry) Reset() {
	*x = PBTabEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTabEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTabEntry) ProtoMessage() {}

func (x *PBTabEntry) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTabEntry.ProtoReflect.Descriptor instead.
func (*PBTabEntry) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{34}
}

func (x *PBTabEntry) GetTitle() *any.Any {
	if x != nil {
		return x.Title
	}
	return nil
}

type PBListView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*any.Any `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
	Padding  *any.Any   `protobuf:"bytes,2,opt,name=padding,proto3" json:"padding,omitempty"`
}

func (x *PBListView) Reset() {
	*x = PBListView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBListView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBListView) ProtoMessage() {}

func (x *PBListView) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBListView.ProtoReflect.Descriptor instead.
func (*PBListView) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{35}
}

func (x *PBListView) GetChildren() []*any.Any {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *PBListView) GetPadding() *any.Any {
	if x != nil {
		return x.Padding
	}
	return nil
}

type PBKarte struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string     `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Preview       *any.Any   `protobuf:"bytes,2,opt,name=preview,proto3" json:"preview,omitempty"`
	GradientColor []*any.Any `protobuf:"bytes,3,rep,name=gradient_color,json=gradientColor,proto3" json:"gradient_color,omitempty"`
	Title         *any.Any   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *PBKarte) Reset() {
	*x = PBKarte{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBKarte) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBKarte) ProtoMessage() {}

func (x *PBKarte) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBKarte.ProtoReflect.Descriptor instead.
func (*PBKarte) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{36}
}

func (x *PBKarte) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PBKarte) GetPreview() *any.Any {
	if x != nil {
		return x.Preview
	}
	return nil
}

func (x *PBKarte) GetGradientColor() []*any.Any {
	if x != nil {
		return x.GradientColor
	}
	return nil
}

func (x *PBKarte) GetTitle() *any.Any {
	if x != nil {
		return x.Title
	}
	return nil
}

type PBScreenWidth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Multiplier float32 `protobuf:"fixed32,1,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	Offset     float32 `protobuf:"fixed32,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *PBScreenWidth) Reset() {
	*x = PBScreenWidth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBScreenWidth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBScreenWidth) ProtoMessage() {}

func (x *PBScreenWidth) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBScreenWidth.ProtoReflect.Descriptor instead.
func (*PBScreenWidth) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{37}
}

func (x *PBScreenWidth) GetMultiplier() float32 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

func (x *PBScreenWidth) GetOffset() float32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PBScreenHeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Multiplier float32 `protobuf:"fixed32,1,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	Offset     float32 `protobuf:"fixed32,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *PBScreenHeight) Reset() {
	*x = PBScreenHeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBScreenHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBScreenHeight) ProtoMessage() {}

func (x *PBScreenHeight) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBScreenHeight.ProtoReflect.Descriptor instead.
func (*PBScreenHeight) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{38}
}

func (x *PBScreenHeight) GetMultiplier() float32 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

func (x *PBScreenHeight) GetOffset() float32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PBRadiusElliptical struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *PBRadiusElliptical) Reset() {
	*x = PBRadiusElliptical{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBRadiusElliptical) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBRadiusElliptical) ProtoMessage() {}

func (x *PBRadiusElliptical) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBRadiusElliptical.ProtoReflect.Descriptor instead.
func (*PBRadiusElliptical) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{39}
}

func (x *PBRadiusElliptical) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PBRadiusElliptical) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type PBBoxDecoration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color               *any.Any   `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Image               *any.Any   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Border              *any.Any   `protobuf:"bytes,3,opt,name=border,proto3" json:"border,omitempty"`
	BorderRadius        *any.Any   `protobuf:"bytes,4,opt,name=border_radius,json=borderRadius,proto3" json:"border_radius,omitempty"`
	BoxShadow           []*any.Any `protobuf:"bytes,5,rep,name=box_shadow,json=boxShadow,proto3" json:"box_shadow,omitempty"`
	Gradient            *any.Any   `protobuf:"bytes,6,opt,name=gradient,proto3" json:"gradient,omitempty"`
	BackgroundBlendMode *any.Any   `protobuf:"bytes,7,opt,name=background_blend_mode,json=backgroundBlendMode,proto3" json:"background_blend_mode,omitempty"`
	Shape               *any.Any   `protobuf:"bytes,8,opt,name=shape,proto3" json:"shape,omitempty"`
}

func (x *PBBoxDecoration) Reset() {
	*x = PBBoxDecoration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBoxDecoration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBoxDecoration) ProtoMessage() {}

func (x *PBBoxDecoration) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBoxDecoration.ProtoReflect.Descriptor instead.
func (*PBBoxDecoration) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{40}
}

func (x *PBBoxDecoration) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *PBBoxDecoration) GetImage() *any.Any {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *PBBoxDecoration) GetBorder() *any.Any {
	if x != nil {
		return x.Border
	}
	return nil
}

func (x *PBBoxDecoration) GetBorderRadius() *any.Any {
	if x != nil {
		return x.BorderRadius
	}
	return nil
}

func (x *PBBoxDecoration) GetBoxShadow() []*any.Any {
	if x != nil {
		return x.BoxShadow
	}
	return nil
}

func (x *PBBoxDecoration) GetGradient() *any.Any {
	if x != nil {
		return x.Gradient
	}
	return nil
}

func (x *PBBoxDecoration) GetBackgroundBlendMode() *any.Any {
	if x != nil {
		return x.BackgroundBlendMode
	}
	return nil
}

func (x *PBBoxDecoration) GetShape() *any.Any {
	if x != nil {
		return x.Shape
	}
	return nil
}

type PBBlendMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlendMode EnumBlendMode `protobuf:"varint,1,opt,name=blend_mode,json=blendMode,proto3,enum=lemmerelassal.v1.pbflutter.EnumBlendMode" json:"blend_mode,omitempty"`
}

func (x *PBBlendMode) Reset() {
	*x = PBBlendMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBlendMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBlendMode) ProtoMessage() {}

func (x *PBBlendMode) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBlendMode.ProtoReflect.Descriptor instead.
func (*PBBlendMode) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{41}
}

func (x *PBBlendMode) GetBlendMode() EnumBlendMode {
	if x != nil {
		return x.BlendMode
	}
	return EnumBlendMode_BLEND_MODE_INVALID
}

type PBTransformTranslate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset *any.Any `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Child  *any.Any `protobuf:"bytes,2,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *PBTransformTranslate) Reset() {
	*x = PBTransformTranslate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTransformTranslate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTransformTranslate) ProtoMessage() {}

func (x *PBTransformTranslate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTransformTranslate.ProtoReflect.Descriptor instead.
func (*PBTransformTranslate) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{42}
}

func (x *PBTransformTranslate) GetOffset() *any.Any {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *PBTransformTranslate) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

type PBTransformRotate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angle     float32  `protobuf:"fixed32,1,opt,name=angle,proto3" json:"angle,omitempty"`
	Origin    *any.Any `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	Alignment *any.Any `protobuf:"bytes,3,opt,name=alignment,proto3" json:"alignment,omitempty"`
	Child     *any.Any `protobuf:"bytes,4,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *PBTransformRotate) Reset() {
	*x = PBTransformRotate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTransformRotate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTransformRotate) ProtoMessage() {}

func (x *PBTransformRotate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTransformRotate.ProtoReflect.Descriptor instead.
func (*PBTransformRotate) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{43}
}

func (x *PBTransformRotate) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *PBTransformRotate) GetOrigin() *any.Any {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *PBTransformRotate) GetAlignment() *any.Any {
	if x != nil {
		return x.Alignment
	}
	return nil
}

func (x *PBTransformRotate) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

type PBTransformScale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scale     float32  `protobuf:"fixed32,1,opt,name=scale,proto3" json:"scale,omitempty"`
	Origin    *any.Any `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	Alignment *any.Any `protobuf:"bytes,3,opt,name=alignment,proto3" json:"alignment,omitempty"`
	Child     *any.Any `protobuf:"bytes,4,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *PBTransformScale) Reset() {
	*x = PBTransformScale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTransformScale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTransformScale) ProtoMessage() {}

func (x *PBTransformScale) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTransformScale.ProtoReflect.Descriptor instead.
func (*PBTransformScale) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{44}
}

func (x *PBTransformScale) GetScale() float32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *PBTransformScale) GetOrigin() *any.Any {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *PBTransformScale) GetAlignment() *any.Any {
	if x != nil {
		return x.Alignment
	}
	return nil
}

func (x *PBTransformScale) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

type PBLinearGradient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Begin     *any.Any   `protobuf:"bytes,1,opt,name=begin,proto3" json:"begin,omitempty"`
	End       *any.Any   `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Colors    []*any.Any `protobuf:"bytes,3,rep,name=colors,proto3" json:"colors,omitempty"`
	Stops     []float32  `protobuf:"fixed32,4,rep,packed,name=stops,proto3" json:"stops,omitempty"`
	TileMode  *any.Any   `protobuf:"bytes,5,opt,name=tile_mode,json=tileMode,proto3" json:"tile_mode,omitempty"`
	Transform *any.Any   `protobuf:"bytes,6,opt,name=transform,proto3" json:"transform,omitempty"`
}

func (x *PBLinearGradient) Reset() {
	*x = PBLinearGradient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBLinearGradient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBLinearGradient) ProtoMessage() {}

func (x *PBLinearGradient) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBLinearGradient.ProtoReflect.Descriptor instead.
func (*PBLinearGradient) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{45}
}

func (x *PBLinearGradient) GetBegin() *any.Any {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *PBLinearGradient) GetEnd() *any.Any {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *PBLinearGradient) GetColors() []*any.Any {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *PBLinearGradient) GetStops() []float32 {
	if x != nil {
		return x.Stops
	}
	return nil
}

func (x *PBLinearGradient) GetTileMode() *any.Any {
	if x != nil {
		return x.TileMode
	}
	return nil
}

func (x *PBLinearGradient) GetTransform() *any.Any {
	if x != nil {
		return x.Transform
	}
	return nil
}

type PBGradient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Colors    []*any.Any `protobuf:"bytes,1,rep,name=colors,proto3" json:"colors,omitempty"`
	Stops     []float32  `protobuf:"fixed32,2,rep,packed,name=stops,proto3" json:"stops,omitempty"`
	Transform *any.Any   `protobuf:"bytes,3,opt,name=transform,proto3" json:"transform,omitempty"`
}

func (x *PBGradient) Reset() {
	*x = PBGradient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBGradient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBGradient) ProtoMessage() {}

func (x *PBGradient) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBGradient.ProtoReflect.Descriptor instead.
func (*PBGradient) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{46}
}

func (x *PBGradient) GetColors() []*any.Any {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *PBGradient) GetStops() []float32 {
	if x != nil {
		return x.Stops
	}
	return nil
}

func (x *PBGradient) GetTransform() *any.Any {
	if x != nil {
		return x.Transform
	}
	return nil
}

type PBDecorationImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *any.Any `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	//        this.onError,
	ColorFilter *any.Any `protobuf:"bytes,2,opt,name=color_filter,json=colorFilter,proto3" json:"color_filter,omitempty"`
	Fit         *any.Any `protobuf:"bytes,3,opt,name=fit,proto3" json:"fit,omitempty"`
	Alignment   *any.Any `protobuf:"bytes,4,opt,name=alignment,proto3" json:"alignment,omitempty"`
	CenterSlice *any.Any `protobuf:"bytes,5,opt,name=centerSlice,proto3" json:"centerSlice,omitempty"`
	Repeat      *any.Any `protobuf:"bytes,6,opt,name=repeat,proto3" json:"repeat,omitempty"` //    google.protobuf.Any matchTextDirection = 7;
}

func (x *PBDecorationImage) Reset() {
	*x = PBDecorationImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBDecorationImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBDecorationImage) ProtoMessage() {}

func (x *PBDecorationImage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBDecorationImage.ProtoReflect.Descriptor instead.
func (*PBDecorationImage) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{47}
}

func (x *PBDecorationImage) GetImage() *any.Any {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *PBDecorationImage) GetColorFilter() *any.Any {
	if x != nil {
		return x.ColorFilter
	}
	return nil
}

func (x *PBDecorationImage) GetFit() *any.Any {
	if x != nil {
		return x.Fit
	}
	return nil
}

func (x *PBDecorationImage) GetAlignment() *any.Any {
	if x != nil {
		return x.Alignment
	}
	return nil
}

func (x *PBDecorationImage) GetCenterSlice() *any.Any {
	if x != nil {
		return x.CenterSlice
	}
	return nil
}

func (x *PBDecorationImage) GetRepeat() *any.Any {
	if x != nil {
		return x.Repeat
	}
	return nil
}

type PBNetworkImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string            `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Scale   float32           `protobuf:"fixed32,2,opt,name=scale,proto3" json:"scale,omitempty"`
	Headers map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PBNetworkImage) Reset() {
	*x = PBNetworkImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBNetworkImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBNetworkImage) ProtoMessage() {}

func (x *PBNetworkImage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBNetworkImage.ProtoReflect.Descriptor instead.
func (*PBNetworkImage) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{48}
}

func (x *PBNetworkImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PBNetworkImage) GetScale() float32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *PBNetworkImage) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type PBBoxFit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoxFit EnumBoxFit `protobuf:"varint,1,opt,name=box_fit,json=boxFit,proto3,enum=lemmerelassal.v1.pbflutter.EnumBoxFit" json:"box_fit,omitempty"`
}

func (x *PBBoxFit) Reset() {
	*x = PBBoxFit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBoxFit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBoxFit) ProtoMessage() {}

func (x *PBBoxFit) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBoxFit.ProtoReflect.Descriptor instead.
func (*PBBoxFit) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{49}
}

func (x *PBBoxFit) GetBoxFit() EnumBoxFit {
	if x != nil {
		return x.BoxFit
	}
	return EnumBoxFit_BOX_FIT_INVALID
}

type PBAlignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *PBAlignment) Reset() {
	*x = PBAlignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBAlignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBAlignment) ProtoMessage() {}

func (x *PBAlignment) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBAlignment.ProtoReflect.Descriptor instead.
func (*PBAlignment) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{50}
}

func (x *PBAlignment) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PBAlignment) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type PBImageRepeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repeat EnumImageRepeat `protobuf:"varint,1,opt,name=repeat,proto3,enum=lemmerelassal.v1.pbflutter.EnumImageRepeat" json:"repeat,omitempty"`
}

func (x *PBImageRepeat) Reset() {
	*x = PBImageRepeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBImageRepeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBImageRepeat) ProtoMessage() {}

func (x *PBImageRepeat) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBImageRepeat.ProtoReflect.Descriptor instead.
func (*PBImageRepeat) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{51}
}

func (x *PBImageRepeat) GetRepeat() EnumImageRepeat {
	if x != nil {
		return x.Repeat
	}
	return EnumImageRepeat_IMAGE_REPEAT_INVALID
}

type PBBoxShape struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoxShape EnumBoxShape `protobuf:"varint,1,opt,name=box_shape,json=boxShape,proto3,enum=lemmerelassal.v1.pbflutter.EnumBoxShape" json:"box_shape,omitempty"`
}

func (x *PBBoxShape) Reset() {
	*x = PBBoxShape{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBoxShape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBoxShape) ProtoMessage() {}

func (x *PBBoxShape) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBoxShape.ProtoReflect.Descriptor instead.
func (*PBBoxShape) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{52}
}

func (x *PBBoxShape) GetBoxShape() EnumBoxShape {
	if x != nil {
		return x.BoxShape
	}
	return EnumBoxShape_BOX_SHAPE_INVALID
}

type PBTileMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TileMode EnumTileMode `protobuf:"varint,1,opt,name=tile_mode,json=tileMode,proto3,enum=lemmerelassal.v1.pbflutter.EnumTileMode" json:"tile_mode,omitempty"`
}

func (x *PBTileMode) Reset() {
	*x = PBTileMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTileMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTileMode) ProtoMessage() {}

func (x *PBTileMode) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTileMode.ProtoReflect.Descriptor instead.
func (*PBTileMode) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{53}
}

func (x *PBTileMode) GetTileMode() EnumTileMode {
	if x != nil {
		return x.TileMode
	}
	return EnumTileMode_TILE_MODE_INVALID
}

type PBBorderRadius struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLeft     *any.Any `protobuf:"bytes,1,opt,name=top_left,json=topLeft,proto3" json:"top_left,omitempty"`
	TopRight    *any.Any `protobuf:"bytes,2,opt,name=top_right,json=topRight,proto3" json:"top_right,omitempty"`
	BottomLeft  *any.Any `protobuf:"bytes,3,opt,name=bottom_left,json=bottomLeft,proto3" json:"bottom_left,omitempty"`
	BottomRight *any.Any `protobuf:"bytes,4,opt,name=bottom_right,json=bottomRight,proto3" json:"bottom_right,omitempty"`
}

func (x *PBBorderRadius) Reset() {
	*x = PBBorderRadius{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBorderRadius) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBorderRadius) ProtoMessage() {}

func (x *PBBorderRadius) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBorderRadius.ProtoReflect.Descriptor instead.
func (*PBBorderRadius) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{54}
}

func (x *PBBorderRadius) GetTopLeft() *any.Any {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *PBBorderRadius) GetTopRight() *any.Any {
	if x != nil {
		return x.TopRight
	}
	return nil
}

func (x *PBBorderRadius) GetBottomLeft() *any.Any {
	if x != nil {
		return x.BottomLeft
	}
	return nil
}

func (x *PBBorderRadius) GetBottomRight() *any.Any {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

type PBBorderRadiusAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Radius *any.Any `protobuf:"bytes,1,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *PBBorderRadiusAll) Reset() {
	*x = PBBorderRadiusAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBorderRadiusAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBorderRadiusAll) ProtoMessage() {}

func (x *PBBorderRadiusAll) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBorderRadiusAll.ProtoReflect.Descriptor instead.
func (*PBBorderRadiusAll) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{55}
}

func (x *PBBorderRadiusAll) GetRadius() *any.Any {
	if x != nil {
		return x.Radius
	}
	return nil
}

type PBBorderRadiusOnly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLeft     *any.Any `protobuf:"bytes,1,opt,name=top_left,json=topLeft,proto3" json:"top_left,omitempty"`
	TopRight    *any.Any `protobuf:"bytes,2,opt,name=top_right,json=topRight,proto3" json:"top_right,omitempty"`
	BottomLeft  *any.Any `protobuf:"bytes,3,opt,name=bottom_left,json=bottomLeft,proto3" json:"bottom_left,omitempty"`
	BottomRight *any.Any `protobuf:"bytes,4,opt,name=bottom_right,json=bottomRight,proto3" json:"bottom_right,omitempty"`
}

func (x *PBBorderRadiusOnly) Reset() {
	*x = PBBorderRadiusOnly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBorderRadiusOnly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBorderRadiusOnly) ProtoMessage() {}

func (x *PBBorderRadiusOnly) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBorderRadiusOnly.ProtoReflect.Descriptor instead.
func (*PBBorderRadiusOnly) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{56}
}

func (x *PBBorderRadiusOnly) GetTopLeft() *any.Any {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *PBBorderRadiusOnly) GetTopRight() *any.Any {
	if x != nil {
		return x.TopRight
	}
	return nil
}

func (x *PBBorderRadiusOnly) GetBottomLeft() *any.Any {
	if x != nil {
		return x.BottomLeft
	}
	return nil
}

func (x *PBBorderRadiusOnly) GetBottomRight() *any.Any {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

type PBFloat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float32 `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PBFloat) Reset() {
	*x = PBFloat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBFloat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBFloat) ProtoMessage() {}

func (x *PBFloat) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBFloat.ProtoReflect.Descriptor instead.
func (*PBFloat) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{57}
}

func (x *PBFloat) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PBInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PBInt) Reset() {
	*x = PBInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBInt) ProtoMessage() {}

func (x *PBInt) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBInt.ProtoReflect.Descriptor instead.
func (*PBInt) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{58}
}

func (x *PBInt) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PBString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PBString) Reset() {
	*x = PBString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBString) ProtoMessage() {}

func (x *PBString) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBString.ProtoReflect.Descriptor instead.
func (*PBString) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{59}
}

func (x *PBString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PBBorderAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width *any.Any `protobuf:"bytes,1,opt,name=width,proto3" json:"width,omitempty"`
	Color *any.Any `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	Style *any.Any `protobuf:"bytes,3,opt,name=style,proto3" json:"style,omitempty"`
}

func (x *PBBorderAll) Reset() {
	*x = PBBorderAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBorderAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBorderAll) ProtoMessage() {}

func (x *PBBorderAll) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBorderAll.ProtoReflect.Descriptor instead.
func (*PBBorderAll) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{60}
}

func (x *PBBorderAll) GetWidth() *any.Any {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *PBBorderAll) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *PBBorderAll) GetStyle() *any.Any {
	if x != nil {
		return x.Style
	}
	return nil
}

type PBBorderStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BorderStyle EnumBorderStyle `protobuf:"varint,1,opt,name=border_style,json=borderStyle,proto3,enum=lemmerelassal.v1.pbflutter.EnumBorderStyle" json:"border_style,omitempty"`
}

func (x *PBBorderStyle) Reset() {
	*x = PBBorderStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBorderStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBorderStyle) ProtoMessage() {}

func (x *PBBorderStyle) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBorderStyle.ProtoReflect.Descriptor instead.
func (*PBBorderStyle) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{61}
}

func (x *PBBorderStyle) GetBorderStyle() EnumBorderStyle {
	if x != nil {
		return x.BorderStyle
	}
	return EnumBorderStyle_BORDER_STYLE_INVALID
}

type PBBoxShadow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color        *any.Any `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Offset       *any.Any `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	BlurRadius   *any.Any `protobuf:"bytes,3,opt,name=blur_radius,json=blurRadius,proto3" json:"blur_radius,omitempty"`
	SpreadRadius *any.Any `protobuf:"bytes,4,opt,name=spread_radius,json=spreadRadius,proto3" json:"spread_radius,omitempty"`
}

func (x *PBBoxShadow) Reset() {
	*x = PBBoxShadow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBoxShadow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBoxShadow) ProtoMessage() {}

func (x *PBBoxShadow) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBoxShadow.ProtoReflect.Descriptor instead.
func (*PBBoxShadow) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{62}
}

func (x *PBBoxShadow) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *PBBoxShadow) GetOffset() *any.Any {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *PBBoxShadow) GetBlurRadius() *any.Any {
	if x != nil {
		return x.BlurRadius
	}
	return nil
}

func (x *PBBoxShadow) GetSpreadRadius() *any.Any {
	if x != nil {
		return x.SpreadRadius
	}
	return nil
}

type PBAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operands []*any.Any `protobuf:"bytes,1,rep,name=operands,proto3" json:"operands,omitempty"`
}

func (x *PBAdd) Reset() {
	*x = PBAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBAdd) ProtoMessage() {}

func (x *PBAdd) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBAdd.ProtoReflect.Descriptor instead.
func (*PBAdd) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{63}
}

func (x *PBAdd) GetOperands() []*any.Any {
	if x != nil {
		return x.Operands
	}
	return nil
}

type PBMult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operands []*any.Any `protobuf:"bytes,1,rep,name=operands,proto3" json:"operands,omitempty"`
}

func (x *PBMult) Reset() {
	*x = PBMult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBMult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBMult) ProtoMessage() {}

func (x *PBMult) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBMult.ProtoReflect.Descriptor instead.
func (*PBMult) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{64}
}

func (x *PBMult) GetOperands() []*any.Any {
	if x != nil {
		return x.Operands
	}
	return nil
}

type PBAnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operands []*any.Any `protobuf:"bytes,1,rep,name=operands,proto3" json:"operands,omitempty"`
}

func (x *PBAnd) Reset() {
	*x = PBAnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBAnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBAnd) ProtoMessage() {}

func (x *PBAnd) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBAnd.ProtoReflect.Descriptor instead.
func (*PBAnd) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{65}
}

func (x *PBAnd) GetOperands() []*any.Any {
	if x != nil {
		return x.Operands
	}
	return nil
}

type PBOr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operands []*any.Any `protobuf:"bytes,1,rep,name=operands,proto3" json:"operands,omitempty"`
}

func (x *PBOr) Reset() {
	*x = PBOr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBOr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBOr) ProtoMessage() {}

func (x *PBOr) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBOr.ProtoReflect.Descriptor instead.
func (*PBOr) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{66}
}

func (x *PBOr) GetOperands() []*any.Any {
	if x != nil {
		return x.Operands
	}
	return nil
}

type PBXor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operands []*any.Any `protobuf:"bytes,1,rep,name=operands,proto3" json:"operands,omitempty"`
}

func (x *PBXor) Reset() {
	*x = PBXor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBXor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBXor) ProtoMessage() {}

func (x *PBXor) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBXor.ProtoReflect.Descriptor instead.
func (*PBXor) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{67}
}

func (x *PBXor) GetOperands() []*any.Any {
	if x != nil {
		return x.Operands
	}
	return nil
}

var File_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto protoreflect.FileDescriptor

var file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDesc = []byte{
	0x0a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x6d,
	0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2f, 0x50, 0x42, 0x46, 0x6c, 0x75,
	0x74, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x66, 0x6c, 0x75,
	0x74, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6c, 0x65, 0x6d, 0x6d,
	0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x62, 0x66,
	0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x5f, 0x0a, 0x07, 0x50, 0x42, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67,
	0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6f, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x22, 0x39, 0x0a, 0x05, 0x50, 0x42, 0x53, 0x56, 0x47, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x3c, 0x0a,
	0x08, 0x50, 0x42, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x67, 0x0a, 0x07, 0x50,
	0x42, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x5f, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x58, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x6c, 0x69, 0x67, 0x6e, 0x5f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6c,
	0x69, 0x67, 0x6e, 0x59, 0x22, 0x57, 0x0a, 0x0b, 0x50, 0x42, 0x54, 0x65, 0x78, 0x74, 0x41, 0x6c,
	0x69, 0x67, 0x6e, 0x12, 0x48, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x6c, 0x69, 0x67,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x65, 0x72,
	0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x62, 0x66, 0x6c, 0x75,
	0x74, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x41, 0x6c, 0x69,
	0x67, 0x6e, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x22, 0x86, 0x01,
	0x0a, 0x06, 0x50, 0x42, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x33, 0x0a, 0x0a,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x74, 0x65, 0x78,
	0x74, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x22, 0x55, 0x0a, 0x0a, 0x50, 0x42, 0x41, 0x63, 0x69, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x08, 0x50, 0x42, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x75, 0x72, 0x5f, 0x72, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x62, 0x6c, 0x75, 0x72, 0x52,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x26, 0x0a, 0x08, 0x50, 0x42, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12,
	0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0xc6, 0x04,
	0x0a, 0x0b, 0x50, 0x42, 0x54, 0x65, 0x78, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f,
	0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x66,
	0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07,
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6e, 0x74, 0x5f,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x6f,
	0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x66, 0x6f, 0x6e, 0x74,
	0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6c,
	0x65, 0x6d, 0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x70, 0x62, 0x66, 0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x42, 0x46, 0x6f, 0x6e, 0x74,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x65, 0x63, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f,
	0x0a, 0x10, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0f,
	0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x3d, 0x0a, 0x0f, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0e,
	0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x6c, 0x65, 0x12, 0x34,
	0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x5f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x12, 0x66, 0x6f, 0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x46, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x36, 0x0a, 0x06, 0x50, 0x42, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x80,
	0x01, 0x0a, 0x15, 0x50, 0x42, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x12, 0x3b, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x8e, 0x03, 0x0a, 0x0e, 0x50, 0x42, 0x53, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x42, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x6c, 0x65, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x0e, 0x66, 0x6c, 0x65, 0x78, 0x69, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x0d, 0x66, 0x6c, 0x65, 0x78, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x61, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x69, 0x6e,
	0x6e, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x76,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x22, 0x57, 0x0a, 0x0c, 0x50, 0x42, 0x49, 0x63, 0x6f, 0x6e, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x12,
	0x50, 0x42, 0x46, 0x6c, 0x65, 0x78, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x42,
	0x61, 0x72, 0x12, 0x4f, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x6d, 0x6d,
	0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x62, 0x66,
	0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x7e, 0x0a, 0x0a, 0x50, 0x42, 0x49,
	0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x64,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x66,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6e,
	0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x06, 0x50, 0x42, 0x49,
	0x63, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x34, 0x0a, 0x08, 0x50, 0x42, 0x54,
	0x61, 0x62, 0x42, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x61, 0x62, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x74, 0x61, 0x62, 0x73, 0x22,
	0x45, 0x0a, 0x05, 0x50, 0x42, 0x54, 0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x0c, 0x50, 0x42, 0x54, 0x61, 0x62, 0x42,
	0x61, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x3a, 0x0a, 0x06, 0x50, 0x42, 0x57, 0x72,
	0x61, 0x70, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x22, 0x36, 0x0a, 0x0a, 0x50, 0x42, 0x53, 0x63, 0x61, 0x66, 0x66, 0x6f,
	0x6c, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xbc, 0x01, 0x0a,
	0x0c, 0x50, 0x42, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x65, 0x66,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x14,
	0x50, 0x42, 0x45, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x74, 0x73, 0x47, 0x65, 0x6f, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x65,
	0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x74, 0x6f, 0x70,
	0x22, 0x67, 0x0a, 0x09, 0x50, 0x42, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a,
	0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a,
	0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x22, 0x3b, 0x0a, 0x07, 0x50, 0x42, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xf7, 0x01, 0x0a, 0x13, 0x50, 0x42, 0x52, 0x61, 0x77,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x36,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x32, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65,
	0x22, 0x10, 0x0a, 0x0e, 0x50, 0x42, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0xab, 0x01, 0x0a, 0x09, 0x50, 0x42, 0x53, 0x68, 0x69, 0x6d, 0x6d, 0x65, 0x72,
	0x12, 0x33, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x22, 0x8a, 0x01, 0x0a, 0x10, 0x50, 0x42, 0x42, 0x6f, 0x78, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xf5, 0x01,
	0x0a, 0x0b, 0x50, 0x42, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x12,
	0x34, 0x0a, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x0c, 0x50, 0x42, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x54, 0x77, 0x65, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x12, 0x26, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x4f, 0x0a, 0x14, 0x50, 0x42, 0x41,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x74, 0x77, 0x65, 0x65, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x77, 0x65, 0x65, 0x6e, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x42,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x22, 0x38, 0x0a, 0x0a, 0x50, 0x42,
	0x54, 0x61, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x6e, 0x0a, 0x0a, 0x50, 0x42, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x70, 0x61, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x22, 0xb6, 0x01, 0x0a, 0x07, 0x50, 0x42, 0x4b, 0x61, 0x72, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x3b, 0x0a, 0x0e, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x2a, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x47, 0x0a,
	0x0d, 0x50, 0x42, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x48, 0x0a, 0x0e, 0x50, 0x42, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x30, 0x0a, 0x12, 0x50, 0x42, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x45, 0x6c, 0x6c, 0x69,
	0x70, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x01, 0x79, 0x22, 0xaf, 0x03, 0x0a, 0x0f, 0x50, 0x42, 0x42, 0x6f, 0x78, 0x44, 0x65, 0x63, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0d,
	0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x62, 0x6f, 0x78, 0x5f, 0x73,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x09, 0x62, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x30, 0x0a, 0x08,
	0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x48,
	0x0a, 0x15, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x65,
	0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x13, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42,
	0x6c, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x22, 0x57, 0x0a, 0x0b, 0x50, 0x42, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x65, 0x72,
	0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x62, 0x66, 0x6c, 0x75,
	0x74, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x09, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x70, 0x0a,
	0x14, 0x50, 0x42, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x22,
	0xb7, 0x01, 0x0a, 0x11, 0x50, 0x42, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x09, 0x61, 0x6c, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a,
	0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x10, 0x50, 0x42,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x12, 0x32, 0x0a, 0x09, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x61, 0x6c, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x22, 0x91, 0x02, 0x0a, 0x10, 0x50, 0x42, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x47,
	0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x12,
	0x31, 0x0a, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x74, 0x69, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x50, 0x42, 0x47, 0x72, 0x61,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0xba, 0x02,
	0x0a, 0x11, 0x50, 0x42, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x37, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x03, 0x66, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x03, 0x66, 0x69, 0x74,
	0x12, 0x32, 0x0a, 0x09, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x0b, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x22, 0xc7, 0x01, 0x0a, 0x0e, 0x50,
	0x42, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x51, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x65, 0x72, 0x65,
	0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x62, 0x66, 0x6c, 0x75, 0x74,
	0x74, 0x65, 0x72, 0x2e, 0x50, 0x42, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x08, 0x50, 0x42, 0x42, 0x6f, 0x78, 0x46, 0x69, 0x74,
	0x12, 0x3f, 0x0a, 0x07, 0x62, 0x6f, 0x78, 0x5f, 0x66, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x62, 0x66, 0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x42, 0x6f, 0x78, 0x46, 0x69, 0x74, 0x52, 0x06, 0x62, 0x6f, 0x78, 0x46, 0x69,
	0x74, 0x22, 0x29, 0x0a, 0x0b, 0x50, 0x42, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0x54, 0x0a, 0x0d,
	0x50, 0x42, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x43, 0x0a,
	0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e,
	0x6c, 0x65, 0x6d, 0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x62, 0x66, 0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x22, 0x53, 0x0a, 0x0a, 0x50, 0x42, 0x42, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x70, 0x65,
	0x12, 0x45, 0x0a, 0x09, 0x62, 0x6f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73,
	0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x62, 0x66, 0x6c, 0x75, 0x74, 0x74, 0x65, 0x72,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x08, 0x62,
	0x6f, 0x78, 0x53, 0x68, 0x61, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x0a, 0x50, 0x42, 0x54, 0x69, 0x6c,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x65,
	0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x62, 0x66, 0x6c,
	0x75, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x69, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x08, 0x74, 0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xe4, 0x01, 0x0a,
	0x0e, 0x50, 0x42, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12,
	0x2f, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74,
	0x12, 0x31, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x41, 0x0a, 0x11, 0x50, 0x42, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x41, 0x6c, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06,
	0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x12, 0x50, 0x42, 0x42, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x2f, 0x0a,
	0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x31,
	0x0a, 0x09, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x1f, 0x0a, 0x07, 0x50, 0x42, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x50, 0x42, 0x49, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x20, 0x0a, 0x08, 0x50, 0x42, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x0b, 0x50, 0x42, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x41, 0x6c, 0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x0d, 0x50, 0x42, 0x42, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x6c, 0x65, 0x6d, 0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x70, 0x62, 0x66, 0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0b, 0x62, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x0b, 0x50, 0x42, 0x42,
	0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x62, 0x6c, 0x75, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a, 0x62,
	0x6c, 0x75, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x70, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0c, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x52, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x05, 0x50, 0x42, 0x41, 0x64, 0x64, 0x12, 0x30, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x22,
	0x3a, 0x0a, 0x06, 0x50, 0x42, 0x4d, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x05, 0x50,
	0x42, 0x41, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x04, 0x50, 0x42, 0x4f, 0x72, 0x12, 0x30,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x22, 0x39, 0x0a, 0x05, 0x50, 0x42, 0x58, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x2a, 0x69, 0x0a, 0x0d, 0x45,
	0x6e, 0x75, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x12,
	0x54, 0x45, 0x58, 0x54, 0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x10, 0x05, 0x12, 0x07, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x10, 0x06, 0x2a, 0x3b, 0x0a, 0x0b, 0x50, 0x42, 0x46, 0x6f, 0x6e, 0x74,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x59, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x49, 0x54, 0x41, 0x4c, 0x49,
	0x43, 0x10, 0x01, 0x2a, 0x76, 0x0a, 0x0e, 0x50, 0x42, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x50, 0x53,
	0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x50, 0x53, 0x45, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4c, 0x4c, 0x41, 0x58, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x50, 0x53, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x49,
	0x4e, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x50, 0x53, 0x45, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x2a, 0x97, 0x03, 0x0a, 0x0d,
	0x45, 0x6e, 0x75, 0x6d, 0x42, 0x6c, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x42, 0x4c, 0x45, 0x4e, 0x44, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x64, 0x73, 0x74,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x4f, 0x76, 0x65, 0x72, 0x10, 0x04, 0x12,
	0x0b, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05,
	0x73, 0x72, 0x63, 0x49, 0x6e, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x64, 0x73, 0x74, 0x49, 0x6e,
	0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x72, 0x63, 0x4f, 0x75, 0x74, 0x10, 0x08, 0x12, 0x0a,
	0x0a, 0x06, 0x64, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x72,
	0x63, 0x41, 0x54, 0x6f, 0x70, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x41, 0x54,
	0x6f, 0x70, 0x10, 0x0b, 0x12, 0x07, 0x0a, 0x03, 0x78, 0x6f, 0x72, 0x10, 0x0c, 0x12, 0x08, 0x0a,
	0x04, 0x70, 0x6c, 0x75, 0x73, 0x10, 0x0d, 0x12, 0x0c, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x10,
	0x0f, 0x12, 0x0b, 0x0a, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x10, 0x10, 0x12, 0x0a,
	0x0a, 0x06, 0x64, 0x61, 0x72, 0x6b, 0x65, 0x6e, 0x10, 0x11, 0x12, 0x0b, 0x0a, 0x07, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x65, 0x6e, 0x10, 0x12, 0x12, 0x0e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x44, 0x6f, 0x64, 0x67, 0x65, 0x10, 0x13, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x42, 0x75, 0x72, 0x6e, 0x10, 0x14, 0x12, 0x0d, 0x0a, 0x09, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x10, 0x15, 0x12, 0x0d, 0x0a, 0x09, 0x73, 0x6f, 0x66, 0x74, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x10, 0x16, 0x12, 0x0e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x10, 0x17, 0x12, 0x0d, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f,
	0x6e, 0x10, 0x18, 0x12, 0x0c, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x10,
	0x19, 0x12, 0x07, 0x0a, 0x03, 0x68, 0x75, 0x65, 0x10, 0x1a, 0x12, 0x0e, 0x0a, 0x0a, 0x73, 0x61,
	0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x1b, 0x12, 0x09, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x10, 0x1c, 0x12, 0x0e, 0x0a, 0x0a, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x6f, 0x73,
	0x69, 0x74, 0x79, 0x10, 0x1d, 0x2a, 0x7c, 0x0a, 0x0a, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x6f, 0x78,
	0x46, 0x69, 0x74, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4f, 0x58, 0x5f, 0x46, 0x49, 0x54, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6c,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x66, 0x69,
	0x74, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x66, 0x69, 0x74,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x6e, 0x6f, 0x6e,
	0x65, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x10, 0x07, 0x2a, 0x5f, 0x0a, 0x0f, 0x45, 0x6e, 0x75, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f,
	0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x58, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x59, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x6e, 0x6f, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x10, 0x04, 0x2a, 0x40, 0x0a, 0x0c, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x6f, 0x78, 0x53,
	0x68, 0x61, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x4f, 0x58, 0x5f, 0x53, 0x48, 0x41, 0x50,
	0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x63, 0x69,
	0x72, 0x63, 0x6c, 0x65, 0x10, 0x02, 0x2a, 0x4a, 0x0a, 0x0c, 0x45, 0x6e, 0x75, 0x6d, 0x54, 0x69,
	0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x49, 0x4c, 0x45, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x63, 0x6c, 0x61, 0x6d, 0x70, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x03, 0x2a, 0x5a, 0x0a, 0x0f, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x42, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x42, 0x3f,
	0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x6d,
	0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2f, 0x50, 0x42, 0x46, 0x6c, 0x75,
	0x74, 0x74, 0x65, 0x72, 0x3b, 0x6c, 0x65, 0x6d, 0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73,
	0x61, 0x6c, 0x5f, 0x76, 0x31, 0x5f, 0x70, 0x62, 0x66, 0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescOnce sync.Once
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescData = file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDesc
)

func file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP() []byte {
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescOnce.Do(func() {
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescData)
	})
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescData
}

var file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_goTypes = []interface{}{
	(EnumTextAlign)(0),            // 0: lemmerelassal.v1.pbflutter.EnumTextAlign
	(PBFontStyle)(0),              // 1: lemmerelassal.v1.pbflutter.PBFontStyle
	(PBCollapseMode)(0),           // 2: lemmerelassal.v1.pbflutter.PBCollapseMode
	(EnumBlendMode)(0),            // 3: lemmerelassal.v1.pbflutter.EnumBlendMode
	(EnumBoxFit)(0),               // 4: lemmerelassal.v1.pbflutter.EnumBoxFit
	(EnumImageRepeat)(0),          // 5: lemmerelassal.v1.pbflutter.EnumImageRepeat
	(EnumBoxShape)(0),             // 6: lemmerelassal.v1.pbflutter.EnumBoxShape
	(EnumTileMode)(0),             // 7: lemmerelassal.v1.pbflutter.EnumTileMode
	(EnumBorderStyle)(0),          // 8: lemmerelassal.v1.pbflutter.EnumBorderStyle
	(*PBColor)(nil),               // 9: lemmerelassal.v1.pbflutter.PBColor
	(*PBSVG)(nil),                 // 10: lemmerelassal.v1.pbflutter.PBSVG
	(*PBColumn)(nil),              // 11: lemmerelassal.v1.pbflutter.PBColumn
	(*PBAlign)(nil),               // 12: lemmerelassal.v1.pbflutter.PBAlign
	(*PBTextAlign)(nil),           // 13: lemmerelassal.v1.pbflutter.PBTextAlign
	(*PBText)(nil),                // 14: lemmerelassal.v1.pbflutter.PBText
	(*PBAcidText)(nil),            // 15: lemmerelassal.v1.pbflutter.PBAcidText
	(*PBShadow)(nil),              // 16: lemmerelassal.v1.pbflutter.PBShadow
	(*PBOffset)(nil),              // 17: lemmerelassal.v1.pbflutter.PBOffset
	(*PBTextStyle)(nil),           // 18: lemmerelassal.v1.pbflutter.PBTextStyle
	(*PBSize)(nil),                // 19: lemmerelassal.v1.pbflutter.PBSize
	(*PBPreferredSizeWidget)(nil), // 20: lemmerelassal.v1.pbflutter.PBPreferredSizeWidget
	(*PBSliverAppBar)(nil),        // 21: lemmerelassal.v1.pbflutter.PBSliverAppBar
	(*PBIconButton)(nil),          // 22: lemmerelassal.v1.pbflutter.PBIconButton
	(*PBFlexibleSpaceBar)(nil),    // 23: lemmerelassal.v1.pbflutter.PBFlexibleSpaceBar
	(*PBIconData)(nil),            // 24: lemmerelassal.v1.pbflutter.PBIconData
	(*PBIcon)(nil),                // 25: lemmerelassal.v1.pbflutter.PBIcon
	(*PBTabBar)(nil),              // 26: lemmerelassal.v1.pbflutter.PBTabBar
	(*PBTab)(nil),                 // 27: lemmerelassal.v1.pbflutter.PBTab
	(*PBTabBarView)(nil),          // 28: lemmerelassal.v1.pbflutter.PBTabBarView
	(*PBWrap)(nil),                // 29: lemmerelassal.v1.pbflutter.PBWrap
	(*PBScaffold)(nil),            // 30: lemmerelassal.v1.pbflutter.PBScaffold
	(*PBPositioned)(nil),          // 31: lemmerelassal.v1.pbflutter.PBPositioned
	(*PBEdgeInsetsGeometry)(nil),  // 32: lemmerelassal.v1.pbflutter.PBEdgeInsetsGeometry
	(*PBPadding)(nil),             // 33: lemmerelassal.v1.pbflutter.PBPadding
	(*PBStack)(nil),               // 34: lemmerelassal.v1.pbflutter.PBStack
	(*PBRawMaterialButton)(nil),   // 35: lemmerelassal.v1.pbflutter.PBRawMaterialButton
	(*PBCircleBorder)(nil),        // 36: lemmerelassal.v1.pbflutter.PBCircleBorder
	(*PBShimmer)(nil),             // 37: lemmerelassal.v1.pbflutter.PBShimmer
	(*PBBoxConstraints)(nil),      // 38: lemmerelassal.v1.pbflutter.PBBoxConstraints
	(*PBContainer)(nil),           // 39: lemmerelassal.v1.pbflutter.PBContainer
	(*PBColorTween)(nil),          // 40: lemmerelassal.v1.pbflutter.PBColorTween
	(*PBAnimatedBackground)(nil),  // 41: lemmerelassal.v1.pbflutter.PBAnimatedBackground
	(*PBDetailView)(nil),          // 42: lemmerelassal.v1.pbflutter.PBDetailView
	(*PBTabEntry)(nil),            // 43: lemmerelassal.v1.pbflutter.PBTabEntry
	(*PBListView)(nil),            // 44: lemmerelassal.v1.pbflutter.PBListView
	(*PBKarte)(nil),               // 45: lemmerelassal.v1.pbflutter.PBKarte
	(*PBScreenWidth)(nil),         // 46: lemmerelassal.v1.pbflutter.PBScreenWidth
	(*PBScreenHeight)(nil),        // 47: lemmerelassal.v1.pbflutter.PBScreenHeight
	(*PBRadiusElliptical)(nil),    // 48: lemmerelassal.v1.pbflutter.PBRadiusElliptical
	(*PBBoxDecoration)(nil),       // 49: lemmerelassal.v1.pbflutter.PBBoxDecoration
	(*PBBlendMode)(nil),           // 50: lemmerelassal.v1.pbflutter.PBBlendMode
	(*PBTransformTranslate)(nil),  // 51: lemmerelassal.v1.pbflutter.PBTransformTranslate
	(*PBTransformRotate)(nil),     // 52: lemmerelassal.v1.pbflutter.PBTransformRotate
	(*PBTransformScale)(nil),      // 53: lemmerelassal.v1.pbflutter.PBTransformScale
	(*PBLinearGradient)(nil),      // 54: lemmerelassal.v1.pbflutter.PBLinearGradient
	(*PBGradient)(nil),            // 55: lemmerelassal.v1.pbflutter.PBGradient
	(*PBDecorationImage)(nil),     // 56: lemmerelassal.v1.pbflutter.PBDecorationImage
	(*PBNetworkImage)(nil),        // 57: lemmerelassal.v1.pbflutter.PBNetworkImage
	(*PBBoxFit)(nil),              // 58: lemmerelassal.v1.pbflutter.PBBoxFit
	(*PBAlignment)(nil),           // 59: lemmerelassal.v1.pbflutter.PBAlignment
	(*PBImageRepeat)(nil),         // 60: lemmerelassal.v1.pbflutter.PBImageRepeat
	(*PBBoxShape)(nil),            // 61: lemmerelassal.v1.pbflutter.PBBoxShape
	(*PBTileMode)(nil),            // 62: lemmerelassal.v1.pbflutter.PBTileMode
	(*PBBorderRadius)(nil),        // 63: lemmerelassal.v1.pbflutter.PBBorderRadius
	(*PBBorderRadiusAll)(nil),     // 64: lemmerelassal.v1.pbflutter.PBBorderRadiusAll
	(*PBBorderRadiusOnly)(nil),    // 65: lemmerelassal.v1.pbflutter.PBBorderRadiusOnly
	(*PBFloat)(nil),               // 66: lemmerelassal.v1.pbflutter.PBFloat
	(*PBInt)(nil),                 // 67: lemmerelassal.v1.pbflutter.PBInt
	(*PBString)(nil),              // 68: lemmerelassal.v1.pbflutter.PBString
	(*PBBorderAll)(nil),           // 69: lemmerelassal.v1.pbflutter.PBBorderAll
	(*PBBorderStyle)(nil),         // 70: lemmerelassal.v1.pbflutter.PBBorderStyle
	(*PBBoxShadow)(nil),           // 71: lemmerelassal.v1.pbflutter.PBBoxShadow
	(*PBAdd)(nil),                 // 72: lemmerelassal.v1.pbflutter.PBAdd
	(*PBMult)(nil),                // 73: lemmerelassal.v1.pbflutter.PBMult
	(*PBAnd)(nil),                 // 74: lemmerelassal.v1.pbflutter.PBAnd
	(*PBOr)(nil),                  // 75: lemmerelassal.v1.pbflutter.PBOr
	(*PBXor)(nil),                 // 76: lemmerelassal.v1.pbflutter.PBXor
	nil,                           // 77: lemmerelassal.v1.pbflutter.PBNetworkImage.HeadersEntry
	(*any.Any)(nil),               // 78: google.protobuf.Any
}
var file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_depIdxs = []int32{
	78,  // 0: lemmerelassal.v1.pbflutter.PBColumn.children:type_name -> google.protobuf.Any
	78,  // 1: lemmerelassal.v1.pbflutter.PBAlign.child:type_name -> google.protobuf.Any
	0,   // 2: lemmerelassal.v1.pbflutter.PBTextAlign.text_align:type_name -> lemmerelassal.v1.pbflutter.EnumTextAlign
	78,  // 3: lemmerelassal.v1.pbflutter.PBText.text_style:type_name -> google.protobuf.Any
	78,  // 4: lemmerelassal.v1.pbflutter.PBText.text_align:type_name -> google.protobuf.Any
	78,  // 5: lemmerelassal.v1.pbflutter.PBAcidText.text_style:type_name -> google.protobuf.Any
	78,  // 6: lemmerelassal.v1.pbflutter.PBShadow.offset:type_name -> google.protobuf.Any
	78,  // 7: lemmerelassal.v1.pbflutter.PBShadow.color:type_name -> google.protobuf.Any
	78,  // 8: lemmerelassal.v1.pbflutter.PBTextStyle.color:type_name -> google.protobuf.Any
	78,  // 9: lemmerelassal.v1.pbflutter.PBTextStyle.shadows:type_name -> google.protobuf.Any
	1,   // 10: lemmerelassal.v1.pbflutter.PBTextStyle.font_style:type_name -> lemmerelassal.v1.pbflutter.PBFontStyle
	78,  // 11: lemmerelassal.v1.pbflutter.PBTextStyle.decoration:type_name -> google.protobuf.Any
	78,  // 12: lemmerelassal.v1.pbflutter.PBTextStyle.decoration_color:type_name -> google.protobuf.Any
	78,  // 13: lemmerelassal.v1.pbflutter.PBTextStyle.decoration_tyle:type_name -> google.protobuf.Any
	78,  // 14: lemmerelassal.v1.pbflutter.PBTextStyle.foreground:type_name -> google.protobuf.Any
	78,  // 15: lemmerelassal.v1.pbflutter.PBPreferredSizeWidget.child:type_name -> google.protobuf.Any
	78,  // 16: lemmerelassal.v1.pbflutter.PBPreferredSizeWidget.preferred_size:type_name -> google.protobuf.Any
	78,  // 17: lemmerelassal.v1.pbflutter.PBSliverAppBar.leading:type_name -> google.protobuf.Any
	78,  // 18: lemmerelassal.v1.pbflutter.PBSliverAppBar.background_color:type_name -> google.protobuf.Any
	78,  // 19: lemmerelassal.v1.pbflutter.PBSliverAppBar.flexible_space:type_name -> google.protobuf.Any
	78,  // 20: lemmerelassal.v1.pbflutter.PBSliverAppBar.bottom:type_name -> google.protobuf.Any
	78,  // 21: lemmerelassal.v1.pbflutter.PBIconButton.icon:type_name -> google.protobuf.Any
	2,   // 22: lemmerelassal.v1.pbflutter.PBFlexibleSpaceBar.collapse_mode:type_name -> lemmerelassal.v1.pbflutter.PBCollapseMode
	78,  // 23: lemmerelassal.v1.pbflutter.PBFlexibleSpaceBar.background:type_name -> google.protobuf.Any
	78,  // 24: lemmerelassal.v1.pbflutter.PBIcon.icon:type_name -> google.protobuf.Any
	78,  // 25: lemmerelassal.v1.pbflutter.PBIcon.color:type_name -> google.protobuf.Any
	78,  // 26: lemmerelassal.v1.pbflutter.PBTabBar.tabs:type_name -> google.protobuf.Any
	78,  // 27: lemmerelassal.v1.pbflutter.PBTab.icon:type_name -> google.protobuf.Any
	78,  // 28: lemmerelassal.v1.pbflutter.PBTabBarView.children:type_name -> google.protobuf.Any
	78,  // 29: lemmerelassal.v1.pbflutter.PBWrap.children:type_name -> google.protobuf.Any
	78,  // 30: lemmerelassal.v1.pbflutter.PBScaffold.body:type_name -> google.protobuf.Any
	78,  // 31: lemmerelassal.v1.pbflutter.PBPositioned.child:type_name -> google.protobuf.Any
	78,  // 32: lemmerelassal.v1.pbflutter.PBPadding.padding:type_name -> google.protobuf.Any
	78,  // 33: lemmerelassal.v1.pbflutter.PBPadding.child:type_name -> google.protobuf.Any
	78,  // 34: lemmerelassal.v1.pbflutter.PBStack.children:type_name -> google.protobuf.Any
	78,  // 35: lemmerelassal.v1.pbflutter.PBRawMaterialButton.constraints:type_name -> google.protobuf.Any
	78,  // 36: lemmerelassal.v1.pbflutter.PBRawMaterialButton.child:type_name -> google.protobuf.Any
	78,  // 37: lemmerelassal.v1.pbflutter.PBRawMaterialButton.fillColor:type_name -> google.protobuf.Any
	78,  // 38: lemmerelassal.v1.pbflutter.PBRawMaterialButton.shape:type_name -> google.protobuf.Any
	78,  // 39: lemmerelassal.v1.pbflutter.PBShimmer.base_color:type_name -> google.protobuf.Any
	78,  // 40: lemmerelassal.v1.pbflutter.PBShimmer.highlight_color:type_name -> google.protobuf.Any
	78,  // 41: lemmerelassal.v1.pbflutter.PBShimmer.child:type_name -> google.protobuf.Any
	78,  // 42: lemmerelassal.v1.pbflutter.PBContainer.color:type_name -> google.protobuf.Any
	78,  // 43: lemmerelassal.v1.pbflutter.PBContainer.width:type_name -> google.protobuf.Any
	78,  // 44: lemmerelassal.v1.pbflutter.PBContainer.height:type_name -> google.protobuf.Any
	78,  // 45: lemmerelassal.v1.pbflutter.PBContainer.child:type_name -> google.protobuf.Any
	78,  // 46: lemmerelassal.v1.pbflutter.PBContainer.decoration:type_name -> google.protobuf.Any
	78,  // 47: lemmerelassal.v1.pbflutter.PBColorTween.begin:type_name -> google.protobuf.Any
	78,  // 48: lemmerelassal.v1.pbflutter.PBColorTween.end:type_name -> google.protobuf.Any
	78,  // 49: lemmerelassal.v1.pbflutter.PBAnimatedBackground.color_tweens:type_name -> google.protobuf.Any
	78,  // 50: lemmerelassal.v1.pbflutter.PBTabEntry.title:type_name -> google.protobuf.Any
	78,  // 51: lemmerelassal.v1.pbflutter.PBListView.children:type_name -> google.protobuf.Any
	78,  // 52: lemmerelassal.v1.pbflutter.PBListView.padding:type_name -> google.protobuf.Any
	78,  // 53: lemmerelassal.v1.pbflutter.PBKarte.preview:type_name -> google.protobuf.Any
	78,  // 54: lemmerelassal.v1.pbflutter.PBKarte.gradient_color:type_name -> google.protobuf.Any
	78,  // 55: lemmerelassal.v1.pbflutter.PBKarte.title:type_name -> google.protobuf.Any
	78,  // 56: lemmerelassal.v1.pbflutter.PBBoxDecoration.color:type_name -> google.protobuf.Any
	78,  // 57: lemmerelassal.v1.pbflutter.PBBoxDecoration.image:type_name -> google.protobuf.Any
	78,  // 58: lemmerelassal.v1.pbflutter.PBBoxDecoration.border:type_name -> google.protobuf.Any
	78,  // 59: lemmerelassal.v1.pbflutter.PBBoxDecoration.border_radius:type_name -> google.protobuf.Any
	78,  // 60: lemmerelassal.v1.pbflutter.PBBoxDecoration.box_shadow:type_name -> google.protobuf.Any
	78,  // 61: lemmerelassal.v1.pbflutter.PBBoxDecoration.gradient:type_name -> google.protobuf.Any
	78,  // 62: lemmerelassal.v1.pbflutter.PBBoxDecoration.background_blend_mode:type_name -> google.protobuf.Any
	78,  // 63: lemmerelassal.v1.pbflutter.PBBoxDecoration.shape:type_name -> google.protobuf.Any
	3,   // 64: lemmerelassal.v1.pbflutter.PBBlendMode.blend_mode:type_name -> lemmerelassal.v1.pbflutter.EnumBlendMode
	78,  // 65: lemmerelassal.v1.pbflutter.PBTransformTranslate.offset:type_name -> google.protobuf.Any
	78,  // 66: lemmerelassal.v1.pbflutter.PBTransformTranslate.child:type_name -> google.protobuf.Any
	78,  // 67: lemmerelassal.v1.pbflutter.PBTransformRotate.origin:type_name -> google.protobuf.Any
	78,  // 68: lemmerelassal.v1.pbflutter.PBTransformRotate.alignment:type_name -> google.protobuf.Any
	78,  // 69: lemmerelassal.v1.pbflutter.PBTransformRotate.child:type_name -> google.protobuf.Any
	78,  // 70: lemmerelassal.v1.pbflutter.PBTransformScale.origin:type_name -> google.protobuf.Any
	78,  // 71: lemmerelassal.v1.pbflutter.PBTransformScale.alignment:type_name -> google.protobuf.Any
	78,  // 72: lemmerelassal.v1.pbflutter.PBTransformScale.child:type_name -> google.protobuf.Any
	78,  // 73: lemmerelassal.v1.pbflutter.PBLinearGradient.begin:type_name -> google.protobuf.Any
	78,  // 74: lemmerelassal.v1.pbflutter.PBLinearGradient.end:type_name -> google.protobuf.Any
	78,  // 75: lemmerelassal.v1.pbflutter.PBLinearGradient.colors:type_name -> google.protobuf.Any
	78,  // 76: lemmerelassal.v1.pbflutter.PBLinearGradient.tile_mode:type_name -> google.protobuf.Any
	78,  // 77: lemmerelassal.v1.pbflutter.PBLinearGradient.transform:type_name -> google.protobuf.Any
	78,  // 78: lemmerelassal.v1.pbflutter.PBGradient.colors:type_name -> google.protobuf.Any
	78,  // 79: lemmerelassal.v1.pbflutter.PBGradient.transform:type_name -> google.protobuf.Any
	78,  // 80: lemmerelassal.v1.pbflutter.PBDecorationImage.image:type_name -> google.protobuf.Any
	78,  // 81: lemmerelassal.v1.pbflutter.PBDecorationImage.color_filter:type_name -> google.protobuf.Any
	78,  // 82: lemmerelassal.v1.pbflutter.PBDecorationImage.fit:type_name -> google.protobuf.Any
	78,  // 83: lemmerelassal.v1.pbflutter.PBDecorationImage.alignment:type_name -> google.protobuf.Any
	78,  // 84: lemmerelassal.v1.pbflutter.PBDecorationImage.centerSlice:type_name -> google.protobuf.Any
	78,  // 85: lemmerelassal.v1.pbflutter.PBDecorationImage.repeat:type_name -> google.protobuf.Any
	77,  // 86: lemmerelassal.v1.pbflutter.PBNetworkImage.headers:type_name -> lemmerelassal.v1.pbflutter.PBNetworkImage.HeadersEntry
	4,   // 87: lemmerelassal.v1.pbflutter.PBBoxFit.box_fit:type_name -> lemmerelassal.v1.pbflutter.EnumBoxFit
	5,   // 88: lemmerelassal.v1.pbflutter.PBImageRepeat.repeat:type_name -> lemmerelassal.v1.pbflutter.EnumImageRepeat
	6,   // 89: lemmerelassal.v1.pbflutter.PBBoxShape.box_shape:type_name -> lemmerelassal.v1.pbflutter.EnumBoxShape
	7,   // 90: lemmerelassal.v1.pbflutter.PBTileMode.tile_mode:type_name -> lemmerelassal.v1.pbflutter.EnumTileMode
	78,  // 91: lemmerelassal.v1.pbflutter.PBBorderRadius.top_left:type_name -> google.protobuf.Any
	78,  // 92: lemmerelassal.v1.pbflutter.PBBorderRadius.top_right:type_name -> google.protobuf.Any
	78,  // 93: lemmerelassal.v1.pbflutter.PBBorderRadius.bottom_left:type_name -> google.protobuf.Any
	78,  // 94: lemmerelassal.v1.pbflutter.PBBorderRadius.bottom_right:type_name -> google.protobuf.Any
	78,  // 95: lemmerelassal.v1.pbflutter.PBBorderRadiusAll.radius:type_name -> google.protobuf.Any
	78,  // 96: lemmerelassal.v1.pbflutter.PBBorderRadiusOnly.top_left:type_name -> google.protobuf.Any
	78,  // 97: lemmerelassal.v1.pbflutter.PBBorderRadiusOnly.top_right:type_name -> google.protobuf.Any
	78,  // 98: lemmerelassal.v1.pbflutter.PBBorderRadiusOnly.bottom_left:type_name -> google.protobuf.Any
	78,  // 99: lemmerelassal.v1.pbflutter.PBBorderRadiusOnly.bottom_right:type_name -> google.protobuf.Any
	78,  // 100: lemmerelassal.v1.pbflutter.PBBorderAll.width:type_name -> google.protobuf.Any
	78,  // 101: lemmerelassal.v1.pbflutter.PBBorderAll.color:type_name -> google.protobuf.Any
	78,  // 102: lemmerelassal.v1.pbflutter.PBBorderAll.style:type_name -> google.protobuf.Any
	8,   // 103: lemmerelassal.v1.pbflutter.PBBorderStyle.border_style:type_name -> lemmerelassal.v1.pbflutter.EnumBorderStyle
	78,  // 104: lemmerelassal.v1.pbflutter.PBBoxShadow.color:type_name -> google.protobuf.Any
	78,  // 105: lemmerelassal.v1.pbflutter.PBBoxShadow.offset:type_name -> google.protobuf.Any
	78,  // 106: lemmerelassal.v1.pbflutter.PBBoxShadow.blur_radius:type_name -> google.protobuf.Any
	78,  // 107: lemmerelassal.v1.pbflutter.PBBoxShadow.spread_radius:type_name -> google.protobuf.Any
	78,  // 108: lemmerelassal.v1.pbflutter.PBAdd.operands:type_name -> google.protobuf.Any
	78,  // 109: lemmerelassal.v1.pbflutter.PBMult.operands:type_name -> google.protobuf.Any
	78,  // 110: lemmerelassal.v1.pbflutter.PBAnd.operands:type_name -> google.protobuf.Any
	78,  // 111: lemmerelassal.v1.pbflutter.PBOr.operands:type_name -> google.protobuf.Any
	78,  // 112: lemmerelassal.v1.pbflutter.PBXor.operands:type_name -> google.protobuf.Any
	113, // [113:113] is the sub-list for method output_type
	113, // [113:113] is the sub-list for method input_type
	113, // [113:113] is the sub-list for extension type_name
	113, // [113:113] is the sub-list for extension extendee
	0,   // [0:113] is the sub-list for field type_name
}

func init() { file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_init() }
func file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_init() {
	if File_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBSVG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBAlign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTextAlign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBAcidText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBShadow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTextStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBPreferredSizeWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBSliverAppBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBIconButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBFlexibleSpaceBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBIconData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBIcon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTabBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTabBarView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBWrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBScaffold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBPositioned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBEdgeInsetsGeometry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBPadding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBRawMaterialButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBCircleBorder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBShimmer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBoxConstraints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBColorTween); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBAnimatedBackground); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBDetailView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTabEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBListView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBKarte); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBScreenWidth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBScreenHeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBRadiusElliptical); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBoxDecoration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBlendMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTransformTranslate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTransformRotate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTransformScale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBLinearGradient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBGradient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBDecorationImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBNetworkImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBoxFit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBAlignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBImageRepeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBoxShape); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTileMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBorderRadius); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBorderRadiusAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBorderRadiusOnly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBFloat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBorderAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBorderStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBoxShadow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBMult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBAnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBOr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBXor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDesc,
			NumEnums:      9,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_goTypes,
		DependencyIndexes: file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_depIdxs,
		EnumInfos:         file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes,
		MessageInfos:      file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes,
	}.Build()
	File_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto = out.File
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDesc = nil
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_goTypes = nil
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_depIdxs = nil
}
