// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: github.com/lemmerelassal/PBFlutter/proto/pbflutter.proto

package lemmerelassal_v1_pbflutter

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PBCollapseMode int32

const (
	PBCollapseMode_COLLAPSE_MODE_INVALID  PBCollapseMode = 0
	PBCollapseMode_COLLAPSE_MODE_PARALLAX PBCollapseMode = 1
	PBCollapseMode_COLLAPSE_MODE_PIN      PBCollapseMode = 2
	PBCollapseMode_COLLAPSE_MODE_NONE     PBCollapseMode = 3
)

// Enum value maps for PBCollapseMode.
var (
	PBCollapseMode_name = map[int32]string{
		0: "COLLAPSE_MODE_INVALID",
		1: "COLLAPSE_MODE_PARALLAX",
		2: "COLLAPSE_MODE_PIN",
		3: "COLLAPSE_MODE_NONE",
	}
	PBCollapseMode_value = map[string]int32{
		"COLLAPSE_MODE_INVALID":  0,
		"COLLAPSE_MODE_PARALLAX": 1,
		"COLLAPSE_MODE_PIN":      2,
		"COLLAPSE_MODE_NONE":     3,
	}
)

func (x PBCollapseMode) Enum() *PBCollapseMode {
	p := new(PBCollapseMode)
	*p = x
	return p
}

func (x PBCollapseMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PBCollapseMode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[0].Descriptor()
}

func (PBCollapseMode) Type() protoreflect.EnumType {
	return &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes[0]
}

func (x PBCollapseMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PBCollapseMode.Descriptor instead.
func (PBCollapseMode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{0}
}

type PBColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Red     int32   `protobuf:"varint,1,opt,name=red,proto3" json:"red,omitempty"`
	Green   int32   `protobuf:"varint,2,opt,name=green,proto3" json:"green,omitempty"`
	Blue    int32   `protobuf:"varint,3,opt,name=blue,proto3" json:"blue,omitempty"`
	Opacity float32 `protobuf:"fixed32,4,opt,name=opacity,proto3" json:"opacity,omitempty"`
}

func (x *PBColor) Reset() {
	*x = PBColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBColor) ProtoMessage() {}

func (x *PBColor) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBColor.ProtoReflect.Descriptor instead.
func (*PBColor) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{0}
}

func (x *PBColor) GetRed() int32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *PBColor) GetGreen() int32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *PBColor) GetBlue() int32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *PBColor) GetOpacity() float32 {
	if x != nil {
		return x.Opacity
	}
	return 0
}

type PBSVG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Picture []byte  `protobuf:"bytes,1,opt,name=picture,proto3" json:"picture,omitempty"`
	Height  float32 `protobuf:"fixed32,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *PBSVG) Reset() {
	*x = PBSVG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBSVG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBSVG) ProtoMessage() {}

func (x *PBSVG) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBSVG.ProtoReflect.Descriptor instead.
func (*PBSVG) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{1}
}

func (x *PBSVG) GetPicture() []byte {
	if x != nil {
		return x.Picture
	}
	return nil
}

func (x *PBSVG) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type PBColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*any.Any `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *PBColumn) Reset() {
	*x = PBColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBColumn) ProtoMessage() {}

func (x *PBColumn) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBColumn.ProtoReflect.Descriptor instead.
func (*PBColumn) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{2}
}

func (x *PBColumn) GetChildren() []*any.Any {
	if x != nil {
		return x.Children
	}
	return nil
}

type PBAlign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Child  *any.Any `protobuf:"bytes,1,opt,name=child,proto3" json:"child,omitempty"`
	AlignX float32  `protobuf:"fixed32,2,opt,name=align_x,json=alignX,proto3" json:"align_x,omitempty"` // -1.0 to +1.0
	AlignY float32  `protobuf:"fixed32,3,opt,name=align_y,json=alignY,proto3" json:"align_y,omitempty"` // -1.0 to +1.0
}

func (x *PBAlign) Reset() {
	*x = PBAlign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBAlign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBAlign) ProtoMessage() {}

func (x *PBAlign) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBAlign.ProtoReflect.Descriptor instead.
func (*PBAlign) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{3}
}

func (x *PBAlign) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *PBAlign) GetAlignX() float32 {
	if x != nil {
		return x.AlignX
	}
	return 0
}

func (x *PBAlign) GetAlignY() float32 {
	if x != nil {
		return x.AlignY
	}
	return 0
}

type PBText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text      string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	TextStyle *any.Any `protobuf:"bytes,2,opt,name=text_style,json=textStyle,proto3" json:"text_style,omitempty"`
}

func (x *PBText) Reset() {
	*x = PBText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBText) ProtoMessage() {}

func (x *PBText) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBText.ProtoReflect.Descriptor instead.
func (*PBText) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{4}
}

func (x *PBText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PBText) GetTextStyle() *any.Any {
	if x != nil {
		return x.TextStyle
	}
	return nil
}

type PBAcidText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text      string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	TextStyle *any.Any `protobuf:"bytes,2,opt,name=text_style,json=textStyle,proto3" json:"text_style,omitempty"`
}

func (x *PBAcidText) Reset() {
	*x = PBAcidText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBAcidText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBAcidText) ProtoMessage() {}

func (x *PBAcidText) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBAcidText.ProtoReflect.Descriptor instead.
func (*PBAcidText) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{5}
}

func (x *PBAcidText) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PBAcidText) GetTextStyle() *any.Any {
	if x != nil {
		return x.TextStyle
	}
	return nil
}

type PBShadow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset     *any.Any `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Color      *any.Any `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	BlurRadius float32  `protobuf:"fixed32,3,opt,name=blur_radius,json=blurRadius,proto3" json:"blur_radius,omitempty"`
}

func (x *PBShadow) Reset() {
	*x = PBShadow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBShadow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBShadow) ProtoMessage() {}

func (x *PBShadow) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBShadow.ProtoReflect.Descriptor instead.
func (*PBShadow) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{6}
}

func (x *PBShadow) GetOffset() *any.Any {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *PBShadow) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *PBShadow) GetBlurRadius() float32 {
	if x != nil {
		return x.BlurRadius
	}
	return 0
}

type PBOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *PBOffset) Reset() {
	*x = PBOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBOffset) ProtoMessage() {}

func (x *PBOffset) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBOffset.ProtoReflect.Descriptor instead.
func (*PBOffset) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{7}
}

func (x *PBOffset) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PBOffset) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type PBTextStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FontFamily string     `protobuf:"bytes,1,opt,name=font_family,json=fontFamily,proto3" json:"font_family,omitempty"`
	Color      *any.Any   `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	FontSize   float32    `protobuf:"fixed32,3,opt,name=fontSize,proto3" json:"fontSize,omitempty"`
	Shadows    []*any.Any `protobuf:"bytes,4,rep,name=shadows,proto3" json:"shadows,omitempty"`
}

func (x *PBTextStyle) Reset() {
	*x = PBTextStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTextStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTextStyle) ProtoMessage() {}

func (x *PBTextStyle) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTextStyle.ProtoReflect.Descriptor instead.
func (*PBTextStyle) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{8}
}

func (x *PBTextStyle) GetFontFamily() string {
	if x != nil {
		return x.FontFamily
	}
	return ""
}

func (x *PBTextStyle) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *PBTextStyle) GetFontSize() float32 {
	if x != nil {
		return x.FontSize
	}
	return 0
}

func (x *PBTextStyle) GetShadows() []*any.Any {
	if x != nil {
		return x.Shadows
	}
	return nil
}

type PBSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  float32 `protobuf:"fixed32,1,opt,name=width,proto3" json:"width,omitempty"`
	Height float32 `protobuf:"fixed32,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *PBSize) Reset() {
	*x = PBSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBSize) ProtoMessage() {}

func (x *PBSize) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBSize.ProtoReflect.Descriptor instead.
func (*PBSize) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{9}
}

func (x *PBSize) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PBSize) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type PBPreferredSizeWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Child         *any.Any `protobuf:"bytes,1,opt,name=child,proto3" json:"child,omitempty"`
	PreferredSize *any.Any `protobuf:"bytes,2,opt,name=preferred_size,json=preferredSize,proto3" json:"preferred_size,omitempty"`
}

func (x *PBPreferredSizeWidget) Reset() {
	*x = PBPreferredSizeWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBPreferredSizeWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBPreferredSizeWidget) ProtoMessage() {}

func (x *PBPreferredSizeWidget) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBPreferredSizeWidget.ProtoReflect.Descriptor instead.
func (*PBPreferredSizeWidget) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{10}
}

func (x *PBPreferredSizeWidget) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *PBPreferredSizeWidget) GetPreferredSize() *any.Any {
	if x != nil {
		return x.PreferredSize
	}
	return nil
}

type PBSliverAppBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leading         *any.Any `protobuf:"bytes,1,opt,name=leading,proto3" json:"leading,omitempty"`
	BackgroundColor *any.Any `protobuf:"bytes,2,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
	FlexibleSpace   *any.Any `protobuf:"bytes,3,opt,name=flexible_space,json=flexibleSpace,proto3" json:"flexible_space,omitempty"`
	ExpandedHeight  float32  `protobuf:"fixed32,4,opt,name=expanded_height,json=expandedHeight,proto3" json:"expanded_height,omitempty"`
	Pinned          bool     `protobuf:"varint,5,opt,name=pinned,proto3" json:"pinned,omitempty"`
	Floating        bool     `protobuf:"varint,6,opt,name=floating,proto3" json:"floating,omitempty"`
	Elevation       float32  `protobuf:"fixed32,7,opt,name=elevation,proto3" json:"elevation,omitempty"`
	ForceElevated   bool     `protobuf:"varint,8,opt,name=force_elevated,json=forceElevated,proto3" json:"force_elevated,omitempty"`
	Bottom          *any.Any `protobuf:"bytes,9,opt,name=bottom,proto3" json:"bottom,omitempty"`
}

func (x *PBSliverAppBar) Reset() {
	*x = PBSliverAppBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBSliverAppBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBSliverAppBar) ProtoMessage() {}

func (x *PBSliverAppBar) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBSliverAppBar.ProtoReflect.Descriptor instead.
func (*PBSliverAppBar) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{11}
}

func (x *PBSliverAppBar) GetLeading() *any.Any {
	if x != nil {
		return x.Leading
	}
	return nil
}

func (x *PBSliverAppBar) GetBackgroundColor() *any.Any {
	if x != nil {
		return x.BackgroundColor
	}
	return nil
}

func (x *PBSliverAppBar) GetFlexibleSpace() *any.Any {
	if x != nil {
		return x.FlexibleSpace
	}
	return nil
}

func (x *PBSliverAppBar) GetExpandedHeight() float32 {
	if x != nil {
		return x.ExpandedHeight
	}
	return 0
}

func (x *PBSliverAppBar) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

func (x *PBSliverAppBar) GetFloating() bool {
	if x != nil {
		return x.Floating
	}
	return false
}

func (x *PBSliverAppBar) GetElevation() float32 {
	if x != nil {
		return x.Elevation
	}
	return 0
}

func (x *PBSliverAppBar) GetForceElevated() bool {
	if x != nil {
		return x.ForceElevated
	}
	return false
}

func (x *PBSliverAppBar) GetBottom() *any.Any {
	if x != nil {
		return x.Bottom
	}
	return nil
}

type PBIconButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon      *any.Any `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	OnPressed string   `protobuf:"bytes,2,opt,name=on_pressed,json=onPressed,proto3" json:"on_pressed,omitempty"`
}

func (x *PBIconButton) Reset() {
	*x = PBIconButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBIconButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBIconButton) ProtoMessage() {}

func (x *PBIconButton) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBIconButton.ProtoReflect.Descriptor instead.
func (*PBIconButton) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{12}
}

func (x *PBIconButton) GetIcon() *any.Any {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *PBIconButton) GetOnPressed() string {
	if x != nil {
		return x.OnPressed
	}
	return ""
}

type PBFlexibleSpaceBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollapseMode PBCollapseMode `protobuf:"varint,1,opt,name=collapse_mode,json=collapseMode,proto3,enum=lemmerelassal.v1.pbflutter.PBCollapseMode" json:"collapse_mode,omitempty"`
	Background   *any.Any       `protobuf:"bytes,2,opt,name=background,proto3" json:"background,omitempty"`
}

func (x *PBFlexibleSpaceBar) Reset() {
	*x = PBFlexibleSpaceBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBFlexibleSpaceBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBFlexibleSpaceBar) ProtoMessage() {}

func (x *PBFlexibleSpaceBar) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBFlexibleSpaceBar.ProtoReflect.Descriptor instead.
func (*PBFlexibleSpaceBar) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{13}
}

func (x *PBFlexibleSpaceBar) GetCollapseMode() PBCollapseMode {
	if x != nil {
		return x.CollapseMode
	}
	return PBCollapseMode_COLLAPSE_MODE_INVALID
}

func (x *PBFlexibleSpaceBar) GetBackground() *any.Any {
	if x != nil {
		return x.Background
	}
	return nil
}

type PBIconData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodePoint          int32  `protobuf:"varint,1,opt,name=code_point,json=codePoint,proto3" json:"code_point,omitempty"`
	FontFamily         string `protobuf:"bytes,2,opt,name=font_family,json=fontFamily,proto3" json:"font_family,omitempty"`
	MatchTextDirection bool   `protobuf:"varint,3,opt,name=match_text_direction,json=matchTextDirection,proto3" json:"match_text_direction,omitempty"`
}

func (x *PBIconData) Reset() {
	*x = PBIconData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBIconData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBIconData) ProtoMessage() {}

func (x *PBIconData) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBIconData.ProtoReflect.Descriptor instead.
func (*PBIconData) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{14}
}

func (x *PBIconData) GetCodePoint() int32 {
	if x != nil {
		return x.CodePoint
	}
	return 0
}

func (x *PBIconData) GetFontFamily() string {
	if x != nil {
		return x.FontFamily
	}
	return ""
}

func (x *PBIconData) GetMatchTextDirection() bool {
	if x != nil {
		return x.MatchTextDirection
	}
	return false
}

type PBIcon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon  *any.Any `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Color *any.Any `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *PBIcon) Reset() {
	*x = PBIcon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBIcon) ProtoMessage() {}

func (x *PBIcon) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBIcon.ProtoReflect.Descriptor instead.
func (*PBIcon) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{15}
}

func (x *PBIcon) GetIcon() *any.Any {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *PBIcon) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

type PBTabBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tabs []*any.Any `protobuf:"bytes,1,rep,name=tabs,proto3" json:"tabs,omitempty"` // controller also necessary but how?
}

func (x *PBTabBar) Reset() {
	*x = PBTabBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTabBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTabBar) ProtoMessage() {}

func (x *PBTabBar) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTabBar.ProtoReflect.Descriptor instead.
func (*PBTabBar) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{16}
}

func (x *PBTabBar) GetTabs() []*any.Any {
	if x != nil {
		return x.Tabs
	}
	return nil
}

type PBTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Icon *any.Any `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *PBTab) Reset() {
	*x = PBTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTab) ProtoMessage() {}

func (x *PBTab) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTab.ProtoReflect.Descriptor instead.
func (*PBTab) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{17}
}

func (x *PBTab) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *PBTab) GetIcon() *any.Any {
	if x != nil {
		return x.Icon
	}
	return nil
}

type PBTabBarView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*any.Any `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"` // controller also necessary but how?
}

func (x *PBTabBarView) Reset() {
	*x = PBTabBarView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBTabBarView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBTabBarView) ProtoMessage() {}

func (x *PBTabBarView) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBTabBarView.ProtoReflect.Descriptor instead.
func (*PBTabBarView) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{18}
}

func (x *PBTabBarView) GetChildren() []*any.Any {
	if x != nil {
		return x.Children
	}
	return nil
}

type PBWrap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*any.Any `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *PBWrap) Reset() {
	*x = PBWrap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBWrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBWrap) ProtoMessage() {}

func (x *PBWrap) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBWrap.ProtoReflect.Descriptor instead.
func (*PBWrap) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{19}
}

func (x *PBWrap) GetChildren() []*any.Any {
	if x != nil {
		return x.Children
	}
	return nil
}

type PBScaffold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body *any.Any `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *PBScaffold) Reset() {
	*x = PBScaffold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBScaffold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBScaffold) ProtoMessage() {}

func (x *PBScaffold) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBScaffold.ProtoReflect.Descriptor instead.
func (*PBScaffold) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{20}
}

func (x *PBScaffold) GetBody() *any.Any {
	if x != nil {
		return x.Body
	}
	return nil
}

type PBPositioned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Left   float32  `protobuf:"fixed32,1,opt,name=left,proto3" json:"left,omitempty"`
	Top    float32  `protobuf:"fixed32,2,opt,name=top,proto3" json:"top,omitempty"`
	Right  float32  `protobuf:"fixed32,3,opt,name=right,proto3" json:"right,omitempty"`
	Bottom float32  `protobuf:"fixed32,4,opt,name=bottom,proto3" json:"bottom,omitempty"`
	Width  float32  `protobuf:"fixed32,5,opt,name=width,proto3" json:"width,omitempty"`
	Height float32  `protobuf:"fixed32,6,opt,name=height,proto3" json:"height,omitempty"`
	Child  *any.Any `protobuf:"bytes,7,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *PBPositioned) Reset() {
	*x = PBPositioned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBPositioned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBPositioned) ProtoMessage() {}

func (x *PBPositioned) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBPositioned.ProtoReflect.Descriptor instead.
func (*PBPositioned) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{21}
}

func (x *PBPositioned) GetLeft() float32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *PBPositioned) GetTop() float32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *PBPositioned) GetRight() float32 {
	if x != nil {
		return x.Right
	}
	return 0
}

func (x *PBPositioned) GetBottom() float32 {
	if x != nil {
		return x.Bottom
	}
	return 0
}

func (x *PBPositioned) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PBPositioned) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PBPositioned) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

type PBEdgeInsetsGeometry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bottom float32 `protobuf:"fixed32,1,opt,name=bottom,proto3" json:"bottom,omitempty"`
	End    float32 `protobuf:"fixed32,2,opt,name=end,proto3" json:"end,omitempty"`
	Left   float32 `protobuf:"fixed32,3,opt,name=left,proto3" json:"left,omitempty"`
	Right  float32 `protobuf:"fixed32,4,opt,name=right,proto3" json:"right,omitempty"`
	Start  float32 `protobuf:"fixed32,5,opt,name=start,proto3" json:"start,omitempty"`
	Top    float32 `protobuf:"fixed32,6,opt,name=top,proto3" json:"top,omitempty"`
}

func (x *PBEdgeInsetsGeometry) Reset() {
	*x = PBEdgeInsetsGeometry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBEdgeInsetsGeometry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBEdgeInsetsGeometry) ProtoMessage() {}

func (x *PBEdgeInsetsGeometry) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBEdgeInsetsGeometry.ProtoReflect.Descriptor instead.
func (*PBEdgeInsetsGeometry) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{22}
}

func (x *PBEdgeInsetsGeometry) GetBottom() float32 {
	if x != nil {
		return x.Bottom
	}
	return 0
}

func (x *PBEdgeInsetsGeometry) GetEnd() float32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *PBEdgeInsetsGeometry) GetLeft() float32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *PBEdgeInsetsGeometry) GetRight() float32 {
	if x != nil {
		return x.Right
	}
	return 0
}

func (x *PBEdgeInsetsGeometry) GetStart() float32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *PBEdgeInsetsGeometry) GetTop() float32 {
	if x != nil {
		return x.Top
	}
	return 0
}

type PBPadding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Padding *any.Any `protobuf:"bytes,1,opt,name=padding,proto3" json:"padding,omitempty"`
	Child   *any.Any `protobuf:"bytes,2,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *PBPadding) Reset() {
	*x = PBPadding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBPadding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBPadding) ProtoMessage() {}

func (x *PBPadding) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBPadding.ProtoReflect.Descriptor instead.
func (*PBPadding) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{23}
}

func (x *PBPadding) GetPadding() *any.Any {
	if x != nil {
		return x.Padding
	}
	return nil
}

func (x *PBPadding) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

type PBStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*any.Any `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *PBStack) Reset() {
	*x = PBStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBStack) ProtoMessage() {}

func (x *PBStack) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBStack.ProtoReflect.Descriptor instead.
func (*PBStack) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{24}
}

func (x *PBStack) GetChildren() []*any.Any {
	if x != nil {
		return x.Children
	}
	return nil
}

type PBRawMaterialButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constraints *any.Any `protobuf:"bytes,1,opt,name=constraints,proto3" json:"constraints,omitempty"`
	Child       *any.Any `protobuf:"bytes,2,opt,name=child,proto3" json:"child,omitempty"`
	Elevation   float32  `protobuf:"fixed32,3,opt,name=elevation,proto3" json:"elevation,omitempty"`
	FillColor   *any.Any `protobuf:"bytes,4,opt,name=fillColor,proto3" json:"fillColor,omitempty"`
	Shape       *any.Any `protobuf:"bytes,5,opt,name=shape,proto3" json:"shape,omitempty"`
}

func (x *PBRawMaterialButton) Reset() {
	*x = PBRawMaterialButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBRawMaterialButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBRawMaterialButton) ProtoMessage() {}

func (x *PBRawMaterialButton) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBRawMaterialButton.ProtoReflect.Descriptor instead.
func (*PBRawMaterialButton) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{25}
}

func (x *PBRawMaterialButton) GetConstraints() *any.Any {
	if x != nil {
		return x.Constraints
	}
	return nil
}

func (x *PBRawMaterialButton) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *PBRawMaterialButton) GetElevation() float32 {
	if x != nil {
		return x.Elevation
	}
	return 0
}

func (x *PBRawMaterialButton) GetFillColor() *any.Any {
	if x != nil {
		return x.FillColor
	}
	return nil
}

func (x *PBRawMaterialButton) GetShape() *any.Any {
	if x != nil {
		return x.Shape
	}
	return nil
}

type PBCircleBorder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PBCircleBorder) Reset() {
	*x = PBCircleBorder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBCircleBorder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBCircleBorder) ProtoMessage() {}

func (x *PBCircleBorder) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBCircleBorder.ProtoReflect.Descriptor instead.
func (*PBCircleBorder) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{26}
}

type PBShimmer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseColor      *any.Any `protobuf:"bytes,1,opt,name=base_color,json=baseColor,proto3" json:"base_color,omitempty"`
	HighlightColor *any.Any `protobuf:"bytes,2,opt,name=highlight_color,json=highlightColor,proto3" json:"highlight_color,omitempty"`
	Child          *any.Any `protobuf:"bytes,3,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *PBShimmer) Reset() {
	*x = PBShimmer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBShimmer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBShimmer) ProtoMessage() {}

func (x *PBShimmer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBShimmer.ProtoReflect.Descriptor instead.
func (*PBShimmer) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{27}
}

func (x *PBShimmer) GetBaseColor() *any.Any {
	if x != nil {
		return x.BaseColor
	}
	return nil
}

func (x *PBShimmer) GetHighlightColor() *any.Any {
	if x != nil {
		return x.HighlightColor
	}
	return nil
}

func (x *PBShimmer) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

type PBBoxConstraints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinWidth  float32 `protobuf:"fixed32,1,opt,name=min_width,json=minWidth,proto3" json:"min_width,omitempty"`
	MaxWidth  float32 `protobuf:"fixed32,2,opt,name=max_width,json=maxWidth,proto3" json:"max_width,omitempty"`
	MinHeight float32 `protobuf:"fixed32,3,opt,name=min_height,json=minHeight,proto3" json:"min_height,omitempty"`
	MaxHeight float32 `protobuf:"fixed32,4,opt,name=max_height,json=maxHeight,proto3" json:"max_height,omitempty"`
}

func (x *PBBoxConstraints) Reset() {
	*x = PBBoxConstraints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBBoxConstraints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBBoxConstraints) ProtoMessage() {}

func (x *PBBoxConstraints) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBBoxConstraints.ProtoReflect.Descriptor instead.
func (*PBBoxConstraints) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{28}
}

func (x *PBBoxConstraints) GetMinWidth() float32 {
	if x != nil {
		return x.MinWidth
	}
	return 0
}

func (x *PBBoxConstraints) GetMaxWidth() float32 {
	if x != nil {
		return x.MaxWidth
	}
	return 0
}

func (x *PBBoxConstraints) GetMinHeight() float32 {
	if x != nil {
		return x.MinHeight
	}
	return 0
}

func (x *PBBoxConstraints) GetMaxHeight() float32 {
	if x != nil {
		return x.MaxHeight
	}
	return 0
}

type PBContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color  *any.Any `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Width  *any.Any `protobuf:"bytes,2,opt,name=width,proto3" json:"width,omitempty"`
	Height *any.Any `protobuf:"bytes,3,opt,name=height,proto3" json:"height,omitempty"`
	Child  *any.Any `protobuf:"bytes,4,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *PBContainer) Reset() {
	*x = PBContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBContainer) ProtoMessage() {}

func (x *PBContainer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBContainer.ProtoReflect.Descriptor instead.
func (*PBContainer) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{29}
}

func (x *PBContainer) GetColor() *any.Any {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *PBContainer) GetWidth() *any.Any {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *PBContainer) GetHeight() *any.Any {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *PBContainer) GetChild() *any.Any {
	if x != nil {
		return x.Child
	}
	return nil
}

type PBColorTween struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Begin *any.Any `protobuf:"bytes,1,opt,name=begin,proto3" json:"begin,omitempty"`
	End   *any.Any `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *PBColorTween) Reset() {
	*x = PBColorTween{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBColorTween) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBColorTween) ProtoMessage() {}

func (x *PBColorTween) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBColorTween.ProtoReflect.Descriptor instead.
func (*PBColorTween) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{30}
}

func (x *PBColorTween) GetBegin() *any.Any {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *PBColorTween) GetEnd() *any.Any {
	if x != nil {
		return x.End
	}
	return nil
}

type PBAnimatedBackground struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColorTweens []*any.Any `protobuf:"bytes,1,rep,name=color_tweens,json=colorTweens,proto3" json:"color_tweens,omitempty"`
}

func (x *PBAnimatedBackground) Reset() {
	*x = PBAnimatedBackground{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBAnimatedBackground) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBAnimatedBackground) ProtoMessage() {}

func (x *PBAnimatedBackground) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBAnimatedBackground.ProtoReflect.Descriptor instead.
func (*PBAnimatedBackground) Descriptor() ([]byte, []int) {
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP(), []int{31}
}

func (x *PBAnimatedBackground) GetColorTweens() []*any.Any {
	if x != nil {
		return x.ColorTweens
	}
	return nil
}

var File_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto protoreflect.FileDescriptor

var file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDesc = []byte{
	0x0a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x6d,
	0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2f, 0x50, 0x42, 0x46, 0x6c, 0x75,
	0x74, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x66, 0x6c, 0x75,
	0x74, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6c, 0x65, 0x6d, 0x6d,
	0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x62, 0x66,
	0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x5f, 0x0a, 0x07, 0x50, 0x42, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67,
	0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6f, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x22, 0x39, 0x0a, 0x05, 0x50, 0x42, 0x53, 0x56, 0x47, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x3c, 0x0a,
	0x08, 0x50, 0x42, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x67, 0x0a, 0x07, 0x50,
	0x42, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x5f, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x58, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x6c, 0x69, 0x67, 0x6e, 0x5f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6c,
	0x69, 0x67, 0x6e, 0x59, 0x22, 0x51, 0x0a, 0x06, 0x50, 0x42, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x74, 0x65,
	0x78, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x55, 0x0a, 0x0a, 0x50, 0x42, 0x41, 0x63, 0x69,
	0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x85,
	0x01, 0x0a, 0x08, 0x50, 0x42, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x75, 0x72, 0x5f, 0x72, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x62, 0x6c, 0x75, 0x72,
	0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x26, 0x0a, 0x08, 0x50, 0x42, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0xa6,
	0x01, 0x0a, 0x0b, 0x50, 0x42, 0x54, 0x65, 0x78, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12,
	0x2a, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x66,
	0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07,
	0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x73, 0x22, 0x36, 0x0a, 0x06, 0x50, 0x42, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x80, 0x01, 0x0a, 0x15, 0x50, 0x42, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x53,
	0x69, 0x7a, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x3b, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x8e, 0x03, 0x0a, 0x0e, 0x50, 0x42, 0x53, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x42, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x6c, 0x65,
	0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x0e, 0x66, 0x6c, 0x65, 0x78, 0x69, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0d, 0x66, 0x6c, 0x65, 0x78, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x65, 0x78,
	0x70, 0x61, 0x6e, 0x64, 0x65, 0x64, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x69,
	0x6e, 0x6e, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x45, 0x6c, 0x65,
	0x76, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x22, 0x57, 0x0a, 0x0c, 0x50, 0x42, 0x49, 0x63, 0x6f, 0x6e, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0x9b, 0x01, 0x0a,
	0x12, 0x50, 0x42, 0x46, 0x6c, 0x65, 0x78, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x42, 0x61, 0x72, 0x12, 0x4f, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6c, 0x65, 0x6d,
	0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x62,
	0x66, 0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x42, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x70,
	0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x70, 0x73, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0a,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x7e, 0x0a, 0x0a, 0x50, 0x42,
	0x49, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f,
	0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x6e, 0x74, 0x5f,
	0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f,
	0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x65, 0x78,
	0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x06, 0x50, 0x42,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x34, 0x0a, 0x08, 0x50, 0x42,
	0x54, 0x61, 0x62, 0x42, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x61, 0x62, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x74, 0x61, 0x62, 0x73,
	0x22, 0x45, 0x0a, 0x05, 0x50, 0x42, 0x54, 0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x0c, 0x50, 0x42, 0x54, 0x61, 0x62,
	0x42, 0x61, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x3a, 0x0a, 0x06, 0x50, 0x42, 0x57,
	0x72, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x36, 0x0a, 0x0a, 0x50, 0x42, 0x53, 0x63, 0x61, 0x66, 0x66,
	0x6f, 0x6c, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xbc, 0x01,
	0x0a, 0x0c, 0x50, 0x42, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x65,
	0x66, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x22, 0x92, 0x01, 0x0a,
	0x14, 0x50, 0x42, 0x45, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x74, 0x73, 0x47, 0x65, 0x6f,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c,
	0x65, 0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x74, 0x6f,
	0x70, 0x22, 0x67, 0x0a, 0x09, 0x50, 0x42, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2e,
	0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2a,
	0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x22, 0x3b, 0x0a, 0x07, 0x50, 0x42,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xf7, 0x01, 0x0a, 0x13, 0x50, 0x42, 0x52, 0x61,
	0x77, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x32, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6c,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70,
	0x65, 0x22, 0x10, 0x0a, 0x0e, 0x50, 0x42, 0x43, 0x69, 0x72, 0x63, 0x6c, 0x65, 0x42, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0xab, 0x01, 0x0a, 0x09, 0x50, 0x42, 0x53, 0x68, 0x69, 0x6d, 0x6d, 0x65,
	0x72, 0x12, 0x33, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x62, 0x61, 0x73,
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x50, 0x42, 0x42, 0x6f, 0x78, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xbf,
	0x01, 0x0a, 0x0b, 0x50, 0x42, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x2a,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x22, 0x62, 0x0a, 0x0c, 0x50, 0x42, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x54, 0x77, 0x65, 0x65, 0x6e,
	0x12, 0x2a, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x03, 0x65, 0x6e, 0x64, 0x22, 0x4f, 0x0a, 0x14, 0x50, 0x42, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x0c,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x54,
	0x77, 0x65, 0x65, 0x6e, 0x73, 0x2a, 0x76, 0x0a, 0x0e, 0x50, 0x42, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x70, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4c, 0x4c, 0x41,
	0x50, 0x53, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x50, 0x53, 0x45, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4c, 0x4c, 0x41, 0x58, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x50, 0x53, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x50, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4c, 0x4c, 0x41, 0x50, 0x53,
	0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x42, 0x3f, 0x5a,
	0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x6d, 0x6d,
	0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61, 0x6c, 0x2f, 0x50, 0x42, 0x46, 0x6c, 0x75, 0x74,
	0x74, 0x65, 0x72, 0x3b, 0x6c, 0x65, 0x6d, 0x6d, 0x65, 0x72, 0x65, 0x6c, 0x61, 0x73, 0x73, 0x61,
	0x6c, 0x5f, 0x76, 0x31, 0x5f, 0x70, 0x62, 0x66, 0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescOnce sync.Once
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescData = file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDesc
)

func file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescGZIP() []byte {
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescOnce.Do(func() {
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescData)
	})
	return file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDescData
}

var file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_goTypes = []interface{}{
	(PBCollapseMode)(0),           // 0: lemmerelassal.v1.pbflutter.PBCollapseMode
	(*PBColor)(nil),               // 1: lemmerelassal.v1.pbflutter.PBColor
	(*PBSVG)(nil),                 // 2: lemmerelassal.v1.pbflutter.PBSVG
	(*PBColumn)(nil),              // 3: lemmerelassal.v1.pbflutter.PBColumn
	(*PBAlign)(nil),               // 4: lemmerelassal.v1.pbflutter.PBAlign
	(*PBText)(nil),                // 5: lemmerelassal.v1.pbflutter.PBText
	(*PBAcidText)(nil),            // 6: lemmerelassal.v1.pbflutter.PBAcidText
	(*PBShadow)(nil),              // 7: lemmerelassal.v1.pbflutter.PBShadow
	(*PBOffset)(nil),              // 8: lemmerelassal.v1.pbflutter.PBOffset
	(*PBTextStyle)(nil),           // 9: lemmerelassal.v1.pbflutter.PBTextStyle
	(*PBSize)(nil),                // 10: lemmerelassal.v1.pbflutter.PBSize
	(*PBPreferredSizeWidget)(nil), // 11: lemmerelassal.v1.pbflutter.PBPreferredSizeWidget
	(*PBSliverAppBar)(nil),        // 12: lemmerelassal.v1.pbflutter.PBSliverAppBar
	(*PBIconButton)(nil),          // 13: lemmerelassal.v1.pbflutter.PBIconButton
	(*PBFlexibleSpaceBar)(nil),    // 14: lemmerelassal.v1.pbflutter.PBFlexibleSpaceBar
	(*PBIconData)(nil),            // 15: lemmerelassal.v1.pbflutter.PBIconData
	(*PBIcon)(nil),                // 16: lemmerelassal.v1.pbflutter.PBIcon
	(*PBTabBar)(nil),              // 17: lemmerelassal.v1.pbflutter.PBTabBar
	(*PBTab)(nil),                 // 18: lemmerelassal.v1.pbflutter.PBTab
	(*PBTabBarView)(nil),          // 19: lemmerelassal.v1.pbflutter.PBTabBarView
	(*PBWrap)(nil),                // 20: lemmerelassal.v1.pbflutter.PBWrap
	(*PBScaffold)(nil),            // 21: lemmerelassal.v1.pbflutter.PBScaffold
	(*PBPositioned)(nil),          // 22: lemmerelassal.v1.pbflutter.PBPositioned
	(*PBEdgeInsetsGeometry)(nil),  // 23: lemmerelassal.v1.pbflutter.PBEdgeInsetsGeometry
	(*PBPadding)(nil),             // 24: lemmerelassal.v1.pbflutter.PBPadding
	(*PBStack)(nil),               // 25: lemmerelassal.v1.pbflutter.PBStack
	(*PBRawMaterialButton)(nil),   // 26: lemmerelassal.v1.pbflutter.PBRawMaterialButton
	(*PBCircleBorder)(nil),        // 27: lemmerelassal.v1.pbflutter.PBCircleBorder
	(*PBShimmer)(nil),             // 28: lemmerelassal.v1.pbflutter.PBShimmer
	(*PBBoxConstraints)(nil),      // 29: lemmerelassal.v1.pbflutter.PBBoxConstraints
	(*PBContainer)(nil),           // 30: lemmerelassal.v1.pbflutter.PBContainer
	(*PBColorTween)(nil),          // 31: lemmerelassal.v1.pbflutter.PBColorTween
	(*PBAnimatedBackground)(nil),  // 32: lemmerelassal.v1.pbflutter.PBAnimatedBackground
	(*any.Any)(nil),               // 33: google.protobuf.Any
}
var file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_depIdxs = []int32{
	33, // 0: lemmerelassal.v1.pbflutter.PBColumn.children:type_name -> google.protobuf.Any
	33, // 1: lemmerelassal.v1.pbflutter.PBAlign.child:type_name -> google.protobuf.Any
	33, // 2: lemmerelassal.v1.pbflutter.PBText.text_style:type_name -> google.protobuf.Any
	33, // 3: lemmerelassal.v1.pbflutter.PBAcidText.text_style:type_name -> google.protobuf.Any
	33, // 4: lemmerelassal.v1.pbflutter.PBShadow.offset:type_name -> google.protobuf.Any
	33, // 5: lemmerelassal.v1.pbflutter.PBShadow.color:type_name -> google.protobuf.Any
	33, // 6: lemmerelassal.v1.pbflutter.PBTextStyle.color:type_name -> google.protobuf.Any
	33, // 7: lemmerelassal.v1.pbflutter.PBTextStyle.shadows:type_name -> google.protobuf.Any
	33, // 8: lemmerelassal.v1.pbflutter.PBPreferredSizeWidget.child:type_name -> google.protobuf.Any
	33, // 9: lemmerelassal.v1.pbflutter.PBPreferredSizeWidget.preferred_size:type_name -> google.protobuf.Any
	33, // 10: lemmerelassal.v1.pbflutter.PBSliverAppBar.leading:type_name -> google.protobuf.Any
	33, // 11: lemmerelassal.v1.pbflutter.PBSliverAppBar.background_color:type_name -> google.protobuf.Any
	33, // 12: lemmerelassal.v1.pbflutter.PBSliverAppBar.flexible_space:type_name -> google.protobuf.Any
	33, // 13: lemmerelassal.v1.pbflutter.PBSliverAppBar.bottom:type_name -> google.protobuf.Any
	33, // 14: lemmerelassal.v1.pbflutter.PBIconButton.icon:type_name -> google.protobuf.Any
	0,  // 15: lemmerelassal.v1.pbflutter.PBFlexibleSpaceBar.collapse_mode:type_name -> lemmerelassal.v1.pbflutter.PBCollapseMode
	33, // 16: lemmerelassal.v1.pbflutter.PBFlexibleSpaceBar.background:type_name -> google.protobuf.Any
	33, // 17: lemmerelassal.v1.pbflutter.PBIcon.icon:type_name -> google.protobuf.Any
	33, // 18: lemmerelassal.v1.pbflutter.PBIcon.color:type_name -> google.protobuf.Any
	33, // 19: lemmerelassal.v1.pbflutter.PBTabBar.tabs:type_name -> google.protobuf.Any
	33, // 20: lemmerelassal.v1.pbflutter.PBTab.icon:type_name -> google.protobuf.Any
	33, // 21: lemmerelassal.v1.pbflutter.PBTabBarView.children:type_name -> google.protobuf.Any
	33, // 22: lemmerelassal.v1.pbflutter.PBWrap.children:type_name -> google.protobuf.Any
	33, // 23: lemmerelassal.v1.pbflutter.PBScaffold.body:type_name -> google.protobuf.Any
	33, // 24: lemmerelassal.v1.pbflutter.PBPositioned.child:type_name -> google.protobuf.Any
	33, // 25: lemmerelassal.v1.pbflutter.PBPadding.padding:type_name -> google.protobuf.Any
	33, // 26: lemmerelassal.v1.pbflutter.PBPadding.child:type_name -> google.protobuf.Any
	33, // 27: lemmerelassal.v1.pbflutter.PBStack.children:type_name -> google.protobuf.Any
	33, // 28: lemmerelassal.v1.pbflutter.PBRawMaterialButton.constraints:type_name -> google.protobuf.Any
	33, // 29: lemmerelassal.v1.pbflutter.PBRawMaterialButton.child:type_name -> google.protobuf.Any
	33, // 30: lemmerelassal.v1.pbflutter.PBRawMaterialButton.fillColor:type_name -> google.protobuf.Any
	33, // 31: lemmerelassal.v1.pbflutter.PBRawMaterialButton.shape:type_name -> google.protobuf.Any
	33, // 32: lemmerelassal.v1.pbflutter.PBShimmer.base_color:type_name -> google.protobuf.Any
	33, // 33: lemmerelassal.v1.pbflutter.PBShimmer.highlight_color:type_name -> google.protobuf.Any
	33, // 34: lemmerelassal.v1.pbflutter.PBShimmer.child:type_name -> google.protobuf.Any
	33, // 35: lemmerelassal.v1.pbflutter.PBContainer.color:type_name -> google.protobuf.Any
	33, // 36: lemmerelassal.v1.pbflutter.PBContainer.width:type_name -> google.protobuf.Any
	33, // 37: lemmerelassal.v1.pbflutter.PBContainer.height:type_name -> google.protobuf.Any
	33, // 38: lemmerelassal.v1.pbflutter.PBContainer.child:type_name -> google.protobuf.Any
	33, // 39: lemmerelassal.v1.pbflutter.PBColorTween.begin:type_name -> google.protobuf.Any
	33, // 40: lemmerelassal.v1.pbflutter.PBColorTween.end:type_name -> google.protobuf.Any
	33, // 41: lemmerelassal.v1.pbflutter.PBAnimatedBackground.color_tweens:type_name -> google.protobuf.Any
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_init() }
func file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_init() {
	if File_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBSVG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBAlign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBAcidText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBShadow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTextStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBPreferredSizeWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBSliverAppBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBIconButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBFlexibleSpaceBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBIconData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBIcon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTabBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBTabBarView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBWrap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBScaffold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBPositioned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBEdgeInsetsGeometry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBPadding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBRawMaterialButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBCircleBorder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBShimmer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBBoxConstraints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBColorTween); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBAnimatedBackground); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_goTypes,
		DependencyIndexes: file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_depIdxs,
		EnumInfos:         file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_enumTypes,
		MessageInfos:      file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_msgTypes,
	}.Build()
	File_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto = out.File
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_rawDesc = nil
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_goTypes = nil
	file_github_com_lemmerelassal_PBFlutter_proto_pbflutter_proto_depIdxs = nil
}
